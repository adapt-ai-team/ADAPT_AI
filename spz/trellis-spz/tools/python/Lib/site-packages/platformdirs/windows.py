"""Windows."""
from __future__ import annotations

import os
from pathlib import Path
from typing import TYPE_CHECKING

from .api import PlatformDirsABC

if TYPE_CHECKING:
    from typing import Literal

def get_base_paths() -> dict[str, str]:
    """Get base paths without registry access."""
    home = Path.home()
    return {
        "CSIDL_APPDATA": str(home / "AppData/Roaming"),
        "CSIDL_LOCAL_APPDATA": str(home / "AppData/Local"),
        "CSIDL_COMMON_APPDATA": os.path.expandvars("%ProgramData%"),
        "CSIDL_PERSONAL": str(home / "Documents"),
        "CSIDL_DOWNLOADS": str(home / "Downloads"),
        "CSIDL_MYPICTURES": str(home / "Pictures"),
        "CSIDL_MYVIDEO": str(home / "Videos"),
        "CSIDL_MYMUSIC": str(home / "Music"),
        "CSIDL_DESKTOPDIRECTORY": str(home / "Desktop")
    }

class Windows(PlatformDirsABC):
    """Windows platform specific base directory paths."""

    def _get_folder_path(self, folder_name: str) -> str:
        """Return folder path without registry access."""
        paths = get_base_paths()
        return paths.get(folder_name, "")

    def _append_app_name_author(self, path: str, *, opinion_value: str | None = None) -> str:
        """Append application name and author to the path."""
        params = []
        if self.appname:
            if self.appauthor is not False:
                author = self.appauthor or self.appname
                params.append(author)
            params.append(self.appname)
            if opinion_value is not None and self.opinion:
                params.append(opinion_value)
            if self.version:
                params.append(self.version)
        path = os.path.join(path, *params)
        self._optionally_create_directory(path)
        return path

    @property
    def user_data_dir(self) -> str:
        """Return full path to the user-specific data dir."""
        const = "CSIDL_APPDATA" if self.roaming else "CSIDL_LOCAL_APPDATA"
        path = os.path.normpath(self._get_folder_path(const))
        return self._append_app_name_author(path)

    @property
    def site_data_dir(self) -> str:
        """Return full path to the user-shared data dir."""
        path = os.path.normpath(self._get_folder_path("CSIDL_COMMON_APPDATA"))
        return self._append_app_name_author(path)

    @property
    def user_config_dir(self) -> str:
        """Return full path to the user-specific config dir."""
        return self.user_data_dir

    @property
    def site_config_dir(self) -> str:
        """Return full path to the user-shared config dir."""
        return self.site_data_dir

    @property
    def user_cache_dir(self) -> str:
        """Return full path to the user-specific cache dir."""
        path = os.path.normpath(self._get_folder_path("CSIDL_LOCAL_APPDATA"))
        return self._append_app_name_author(path, opinion_value="Cache")

    @property
    def site_cache_dir(self) -> str:
        """Return full path to the user-shared cache dir."""
        path = os.path.normpath(self._get_folder_path("CSIDL_COMMON_APPDATA"))
        return self._append_app_name_author(path, opinion_value="Cache")

    @property
    def user_state_dir(self) -> str:
        """Return full path to the user-specific state dir."""
        return self.user_data_dir

    @property
    def user_log_dir(self) -> str:
        """Return full path to the user-specific log dir."""
        path = self.user_data_dir
        if self.opinion:
            path = os.path.join(path, "Logs")
            self._optionally_create_directory(path)
        return path

    @property
    def user_documents_dir(self) -> str:
        """Return full path to the user-specific documents dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_PERSONAL"))

    @property
    def user_downloads_dir(self) -> str:
        """Return full path to the user-specific downloads dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_DOWNLOADS"))

    @property
    def user_pictures_dir(self) -> str:
        """Return full path to the user-specific pictures dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_MYPICTURES"))

    @property
    def user_videos_dir(self) -> str:
        """Return full path to the user-specific videos dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_MYVIDEO"))

    @property
    def user_music_dir(self) -> str:
        """Return full path to the user-specific music dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_MYMUSIC"))

    @property
    def user_desktop_dir(self) -> str:
        """Return full path to the user-specific desktop dir."""
        return os.path.normpath(self._get_folder_path("CSIDL_DESKTOPDIRECTORY"))

    @property
    def user_runtime_dir(self) -> str:
        """Return full path to the user-specific runtime dir."""
        path = os.path.normpath(os.path.join(self._get_folder_path("CSIDL_LOCAL_APPDATA"), "Temp"))
        return self._append_app_name_author(path)

    @property
    def site_runtime_dir(self) -> str:
        """Return full path to the user-shared runtime dir."""
        return self.user_runtime_dir

    @property
    def user_data_path(self) -> Path:
        """Return full path to the user-specific data dir as a Path object."""
        return Path(self.user_data_dir)

__all__ = ["Windows"]