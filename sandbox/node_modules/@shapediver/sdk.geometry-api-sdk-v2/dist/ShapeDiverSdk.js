"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapeDiverSdk = void 0;
exports.create = create;
const sdk_geometry_api_sdk_core_1 = require("@shapediver/sdk.geometry-api-sdk-core");
const ShapeDiverAnalyticsApi_1 = require("./resources/ShapeDiverAnalyticsApi");
const ShapeDiverArSceneApi_1 = require("./resources/ShapeDiverArSceneApi");
const ShapeDiverAssetApi_1 = require("./resources/ShapeDiverAssetApi");
const ShapeDiverExportApi_1 = require("./resources/ShapeDiverExportApi");
const ShapeDiverFileApi_1 = require("./resources/ShapeDiverFileApi");
const ShapeDiverGltfApi_1 = require("./resources/ShapeDiverGltfApi");
const ShapeDiverModelApi_1 = require("./resources/ShapeDiverModelApi");
const ShapeDiverOutputApi_1 = require("./resources/ShapeDiverOutputApi");
const ShapeDiverSdtfApi_1 = require("./resources/ShapeDiverSdtfApi");
const ShapeDiverSessionApi_1 = require("./resources/ShapeDiverSessionApi");
const ShapeDiverSystemApi_1 = require("./resources/ShapeDiverSystemApi");
const ShapeDiverTextureApi_1 = require("./resources/ShapeDiverTextureApi");
const ShapeDiverUtilsApi_1 = require("./resources/ShapeDiverUtilsApi");
const ShapeDiverModelStateApi_1 = require("./resources/ShapeDiverModelStateApi");
function create(baseUrl, jwt) {
    return new ShapeDiverSdk(baseUrl, jwt);
}
class ShapeDiverSdk extends sdk_geometry_api_sdk_core_1.BaseShapeDiverSdk {
    constructor(baseUrl, jwt) {
        super(baseUrl);
        if (jwt)
            this.setConfigurationValue(sdk_geometry_api_sdk_core_1.ShapeDiverSdkConfigType.JWT_TOKEN, jwt);
        this._analytics = new ShapeDiverAnalyticsApi_1.ShapeDiverAnalyticsApi(this.sdkApi);
        this._arScene = new ShapeDiverArSceneApi_1.ShapeDiverArSceneApi(this.sdkApi);
        this._asset = new ShapeDiverAssetApi_1.ShapeDiverAssetApi(this.sdkApi);
        this._export = new ShapeDiverExportApi_1.ShapeDiverExportApi(this.sdkApi);
        this._file = new ShapeDiverFileApi_1.ShapeDiverFileApi(this.sdkApi);
        this._gltf = new ShapeDiverGltfApi_1.ShapeDiverGltfApi(this.sdkApi);
        this._model = new ShapeDiverModelApi_1.ShapeDiverModelApi(this.sdkApi);
        this._modelState = new ShapeDiverModelStateApi_1.ShapeDiverModelStateApi(this.sdkApi);
        this._output = new ShapeDiverOutputApi_1.ShapeDiverOutputApi(this.sdkApi);
        this._sdtf = new ShapeDiverSdtfApi_1.ShapeDiverSdtfApi(this.sdkApi);
        this._session = new ShapeDiverSessionApi_1.ShapeDiverSessionApi(this.sdkApi);
        this._system = new ShapeDiverSystemApi_1.ShapeDiverSystemApi(this.sdkApi);
        this._texture = new ShapeDiverTextureApi_1.ShapeDiverTextureApi(this.sdkApi);
        this._utils = new ShapeDiverUtilsApi_1.ShapeDiverUtilsApi(this.sdkApi);
    }
    get analytics() {
        return this._analytics;
    }
    get arScene() {
        return this._arScene;
    }
    get asset() {
        return this._asset;
    }
    get export() {
        return this._export;
    }
    get file() {
        return this._file;
    }
    get gltf() {
        return this._gltf;
    }
    get model() {
        return this._model;
    }
    get modelState() {
        return this._modelState;
    }
    get output() {
        return this._output;
    }
    get sdtf() {
        return this._sdtf;
    }
    get session() {
        return this._session;
    }
    get system() {
        return this._system;
    }
    get texture() {
        return this._texture;
    }
    get utils() {
        return this._utils;
    }
}
exports.ShapeDiverSdk = ShapeDiverSdk;
//# sourceMappingURL=ShapeDiverSdk.js.map