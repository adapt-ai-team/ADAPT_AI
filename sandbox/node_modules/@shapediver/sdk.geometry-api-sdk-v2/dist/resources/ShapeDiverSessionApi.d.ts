import { ShapeDiverRequestCustomization, ShapeDiverRequestExport, ShapeDiverRequestTicket, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
export declare class ShapeDiverSessionApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    ticket(modelId: string, body: ShapeDiverRequestTicket): Promise<ShapeDiverResponseDto>;
    init(ticket: string, request?: ShapeDiverRequestCustomization | ShapeDiverRequestExport, modelStateId?: string, strictValidation?: boolean): Promise<ShapeDiverResponseDto>;
    initForModel(modelId: string, request?: ShapeDiverRequestCustomization | ShapeDiverRequestExport, modelStateId?: string, strictValidation?: boolean): Promise<ShapeDiverResponseDto>;
    default(sessionId: string): Promise<ShapeDiverResponseDto>;
    close(sessionId: string): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverSessionApi.d.ts.map