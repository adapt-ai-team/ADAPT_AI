import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
import { ShapeDiverRequestModelState, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
export declare class ShapeDiverModelStateApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    exists(modelStateId: string): Promise<boolean>;
    get(modelStateId: string): Promise<ShapeDiverResponseDto>;
    delete(modelStateId: string): Promise<void>;
    getData(modelStateId: string): Promise<ShapeDiverResponseDto>;
    hasImage(modelStateId: string): Promise<boolean>;
    getImage(modelStateId: string): Promise<[ArrayBuffer, string]>;
    list(modelId: string, offset?: string): Promise<ShapeDiverResponseDto>;
    create(sessionId: string, body: ShapeDiverRequestModelState): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverModelStateApi.d.ts.map