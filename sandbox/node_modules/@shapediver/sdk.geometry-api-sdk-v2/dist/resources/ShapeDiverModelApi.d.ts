import { ShapeDiverRequestConfigure, ShapeDiverRequestCustomization, ShapeDiverRequestModel, ShapeDiverRequestModelComputationQueryOrder, ShapeDiverRequestModelComputationQueryStatus, ShapeDiverRequestModelComputationQueryType, ShapeDiverRequestParameterDefinition, ShapeDiverResponseDto } from "@shapediver/api.geometry-api-dto-v2";
import { BaseResourceApi, ShapeDiverSdkApi } from "@shapediver/sdk.geometry-api-sdk-core";
export declare class ShapeDiverModelApi extends BaseResourceApi {
    constructor(api: ShapeDiverSdkApi);
    get(modelId: string): Promise<ShapeDiverResponseDto>;
    create(body: ShapeDiverRequestModel): Promise<ShapeDiverResponseDto>;
    update(modelId: string, body: ShapeDiverRequestModel): Promise<ShapeDiverResponseDto>;
    delete(modelId: string): Promise<ShapeDiverResponseDto>;
    list(offset?: string): Promise<ShapeDiverResponseDto>;
    getConfig(modelId: string): Promise<ShapeDiverResponseDto>;
    createConfig(modelId: string, body: ShapeDiverRequestConfigure): Promise<ShapeDiverResponseDto>;
    updateConfig(modelId: string, body: ShapeDiverRequestConfigure): Promise<ShapeDiverResponseDto>;
    getFile(modelId: string): Promise<ArrayBuffer>;
    setDefaultParams(modelId: string, body: ShapeDiverRequestCustomization): Promise<ShapeDiverResponseDto>;
    updateParameterDefinitions(modelId: string, body: ShapeDiverRequestParameterDefinition): Promise<ShapeDiverResponseDto>;
    queryComputations(modelId: string, timestampFrom?: string, timestampTo?: string, limit?: number, strictLimit?: boolean, order?: ShapeDiverRequestModelComputationQueryOrder, status?: ShapeDiverRequestModelComputationQueryStatus, type?: ShapeDiverRequestModelComputationQueryType, offset?: string): Promise<ShapeDiverResponseDto>;
    enqueueCleanupExports(modelId: string, untilLastSeen: string): Promise<ShapeDiverResponseDto>;
    enqueueCleanupOutputs(modelId: string, untilLastSeen: string): Promise<ShapeDiverResponseDto>;
    enqueueCleanupTextures(modelId: string, untilLastSeen: string): Promise<ShapeDiverResponseDto>;
    getCleanupStatus(modelId: string): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=ShapeDiverModelApi.d.ts.map