import { RenderingEngine } from "@shapediver/viewer.rendering-engine.rendering-engine-threejs";
import { IViewportGlobalAccessObjectDefinition, SettingsEngine, StatePromise } from "@shapediver/viewer.shared.services";
export declare class ViewportGlobalAccessObject implements IViewportGlobalAccessObjectDefinition {
    #private;
    constructor(viewportEngine: RenderingEngine);
    get boundingBoxCreated(): StatePromise<boolean>;
    get busy(): string[];
    get environmentMapLoaded(): StatePromise<boolean>;
    set environmentMapLoaded(value: StatePromise<boolean>);
    get id(): string;
    get initialized(): StatePromise<boolean>;
    get sessionSettingsId(): string | undefined;
    get sessionSettingsMode(): import("@shapediver/viewer.shared.services").SESSION_SETTINGS_MODE;
    get settingsAssigned(): StatePromise<boolean>;
    applySettings(sections?: {
        ar?: boolean | undefined;
        scene?: boolean | undefined;
        camera?: boolean | undefined;
        light?: boolean | undefined;
        environment?: boolean | undefined;
        general?: boolean | undefined;
        postprocessing?: boolean | undefined;
    } | undefined, settingsEngine?: SettingsEngine | undefined, updateViewport?: boolean | undefined): Promise<void>;
    assignSettingsEngine(settingsEngine: SettingsEngine): void;
    displayErrorMessage(message: string): void;
    reset(): void;
    saveSettings(): void;
    update(id: string): void;
}
//# sourceMappingURL=ViewportGlobalAccessObject.d.ts.map