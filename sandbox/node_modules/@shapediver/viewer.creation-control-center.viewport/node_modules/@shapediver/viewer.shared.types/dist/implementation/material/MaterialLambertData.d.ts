import { IMapData } from "../../interfaces/data/material/IMapData";
import { IMaterialLambertData, IMaterialLambertDataProperties } from "../../interfaces/data/material/IMaterialLambertData";
import { AbstractMaterialData } from "./AbstractMaterialData";
export declare class MaterialLambertData extends AbstractMaterialData implements IMaterialLambertData {
    #private;
    constructor(properties?: IMaterialLambertDataProperties, id?: string, version?: string);
    get displacementBias(): number;
    set displacementBias(value: number);
    get displacementMap(): IMapData | undefined;
    set displacementMap(value: IMapData | undefined);
    get displacementScale(): number;
    set displacementScale(value: number);
    get specularMap(): IMapData | undefined;
    set specularMap(value: IMapData | undefined);
    get envMap(): string | string[] | undefined;
    set envMap(value: string | string[] | undefined);
    get reflectivity(): number;
    set reflectivity(value: number);
    clone(): IMaterialLambertData;
    copy(source: IMaterialLambertData): void;
    reset(): void;
}
//# sourceMappingURL=MaterialLambertData.d.ts.map