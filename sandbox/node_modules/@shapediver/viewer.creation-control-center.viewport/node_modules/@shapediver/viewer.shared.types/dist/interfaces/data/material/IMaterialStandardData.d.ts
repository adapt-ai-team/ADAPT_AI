import { Color } from "../../../types";
import { IMapData, IMapDataPropertiesDefinition } from "./IMapData";
import { IMaterialAbstractData, IMaterialAbstractDataPropertiesGeneric } from "./IMaterialAbstractData";
export declare type IMaterialStandardDataProperties = Partial<IMaterialStandardDataPropertiesGeneric<IMapData>>;
export declare type IMaterialStandardDataPropertiesDefinition = Partial<IMaterialStandardDataPropertiesGeneric<IMapDataPropertiesDefinition>>;
export interface IMaterialStandardData extends IMaterialStandardDataPropertiesGeneric<IMapData>, IMaterialAbstractData {
    clone(): IMaterialStandardData;
    copy(source: IMaterialStandardData): void;
}
interface IMaterialStandardDataPropertiesGeneric<T> extends IMaterialAbstractDataPropertiesGeneric<T> {
    attenuationColor: Color;
    attenuationDistance: number;
    clearcoat: number;
    clearcoatMap?: T;
    clearcoatNormalMap?: T;
    clearcoatRoughness: number;
    clearcoatRoughnessMap?: T;
    displacementBias: number;
    displacementMap?: T;
    displacementScale: number;
    envMap?: string | string[];
    ior: number;
    metalness: number;
    metalnessMap?: T;
    metalnessRoughnessMap?: T;
    roughness: number;
    roughnessMap?: T;
    sheen: number;
    sheenColor: Color;
    sheenColorMap?: T;
    sheenRoughness: number;
    sheenRoughnessMap?: T;
    specularColor: Color;
    specularColorMap?: T;
    specularIntensity: number;
    specularIntensityMap?: T;
    thickness: number;
    thicknessMap?: T;
    transmission: number;
    transmissionMap?: T;
}
export {};
//# sourceMappingURL=IMaterialStandardData.d.ts.map