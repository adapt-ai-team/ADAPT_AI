/**
 * @swagger {components.schemas} ResponseAnalytics {
     "description": "Analytics components.",
     "type": "object"
    }
 */
/** Analytics components. */
export interface ShapeDiverResponseAnalytics {
    /**
     * @swagger {components.schemas.ResponseAnalytics.properties} models {
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseAnalyticsModel"
         }
       }
     * @swagger {components.schemas.ResponseAnalytics} required [ "models" ]
     */
    /** Holds all model session analytics. */
    models: ShapeDiverResponseAnalyticsModel[];

    /**
     * @swagger {components.schemas.ResponseAnalytics.properties} creditMetrics {
         "type": "array",
         "items": {
           "oneOf": [
             { "$ref": "#/components/schemas/ResponseAnalyticsModelCreditMetrics" },
             { "$ref": "#/components/schemas/ResponseAnalyticsUserCreditMetrics" },
             { "$ref": "#/components/schemas/ResponseAnalyticsOrganizationCreditMetrics" },
             { "$ref": "#/components/schemas/ResponseAnalyticsSystemCreditMetrics" },
             { "$ref": "#/components/schemas/ResponseAnalyticsModelUserCreditMetrics" },
             { "$ref": "#/components/schemas/ResponseAnalyticsModelOrganizationCreditMetrics" }
           ]
         }
       }
     * @swagger {components.schemas.ResponseAnalytics} required [ "creditMetrics" ]
     */
    /** Holds all credit metric analytics. */
    creditMetrics: (
        | ShapeDiverResponseAnalyticsModelCreditMetrics
        | ShapeDiverResponseAnalyticsUserCreditMetrics
        | ShapeDiverResponseAnalyticsOrganizationCreditMetrics
        | ShapeDiverResponseAnalyticsSystemCreditMetrics
        | ShapeDiverResponseAnalyticsModelUserCreditMetrics
        | ShapeDiverResponseAnalyticsModelOrganizationCreditMetrics
    )[];
}

// #region Model Session Statistics

/**
 * @swagger {components.schemas} ResponseAnalyticsModel {
     "description": "Aggregated model session statistics.",
     "type": "object"
    }
 */
/** Aggregated model session statistics. */
export interface ShapeDiverResponseAnalyticsModel {
    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} modelid {
         "description": "Requested model ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "modelid" ]
     */
    /** Requested model ID. */
    modelid: string;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} timestamp {
         "description": "Requested timestamp (hourly, daily, monthly, yearly).",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "timestamp" ]
     */
    /** Requested timestamp (hourly, daily, monthly, yearly). */
    timestamp: string;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} isCompilationDone {
         "description": "Aggregation for this timestamp has finished.",
         "type": "boolean"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "isCompilationDone" ]
     */
    /** Aggregation for this timestamp has finished. */
    isCompilationDone: boolean;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} count {
         "description": "Number of (technical) sessions for the given model and timestamp.<br/>A technical session may last up to two hours, after which it will get cancelled by the backend.</br>CAUTION: Not to be confused with credits!",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "count" ]
     */
    /** Number of (technical) sessions for the given model and timestamp.<br/>A technical session may last up to two hours, after which it will get cancelled by the backend.</br>CAUTION: Not to be confused with credits! */
    count: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} billableCount {
         "description": "Billable duration-based credit count, based on maximum duration of 10 minutes per credit.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "billableCount" ]
     */
    /** Billable duration-based credit count, based on maximum duration of 10 minutes per credit. */
    billableCount: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} duration {
         "description": "Statistics on the duration of all sessions.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "duration" ]
     */
    /** Statistics on the duration of all sessions. */
    duration: ShapeDiverResponseAnalyticsModelOnDuration;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} app {
         "description": "Statistics on the duration of app sessions.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "app" ]
     */
    /** Statistics on the duration of app sessions. */
    app: ShapeDiverResponseAnalyticsModelOnDuration;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} backend {
         "description": "Statistics on the duration of backend sessions.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "backend" ]
     */
    /** Statistics on the duration of backend sessions. */
    backend: ShapeDiverResponseAnalyticsModelOnDuration;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} embedded {
         "description": "Statistics on the duration of embedded sessions.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "embedded" ]
     */
    /** Statistics on the duration of embedded sessions. */
    embedded: ShapeDiverResponseAnalyticsModelOnDuration;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} desktop {
         "description": "Statistics on the duration of desktop sessions.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "desktop" ]
     */
    /** Statistics on the duration of desktop sessions. */
    desktop: ShapeDiverResponseAnalyticsModelOnDuration;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} customize {
         "description": "Statistics on customization requests per session.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnAction"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "customize" ]
     */
    /** Statistics on customization requests per session. */
    customize: ShapeDiverResponseAnalyticsModelOnAction;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModel.properties} export {
         "description": "Statistics on export requests per session.",
         "$ref": "#/components/schemas/ResponseAnalyticsModelOnAction"
       }
     * @swagger {components.schemas.ResponseAnalyticsModel} required [ "export" ]
     */
    /** Statistics on export requests per session. */
    export: ShapeDiverResponseAnalyticsModelOnAction;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsModelOnDuration {
     "type": "object"
    }
 */
/** */
export interface ShapeDiverResponseAnalyticsModelOnDuration {
    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} count {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Number of (technical) sessions from all sources (duration) or from one specific source (app, embedded, backend, desktop), for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Number of sessions which have export requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "count" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Number of (technical) sessions from all sources (duration) or from one specific source (app, embedded, backend, desktop), for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Number of sessions which have export requests. */
    count: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} billableCount {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Billable duration-based credit count for all sessions, based on maximum duration of 10 minutes per credit.<br/><br/><code>export</code>, <code>customize</code>: Billable duration-based credit count for sessions which have export requests, based on maximum duration of 10 minutes per credit.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "billableCount" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Billable duration-based credit count for all sessions, based on maximum duration of 10 minutes per credit.<br/><br/><code>export</code>, <code>customize</code>: Billable duration-based credit count for sessions which have export requests, based on maximum duration of 10 minutes per credit. */
    billableCount: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} min {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "min" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests. */
    min: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} max {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "max" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests. */
    max: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} avg {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Average duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Average number of export requests per session, for sessions which have export requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "avg" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Average duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Average number of export requests per session, for sessions which have export requests. */
    avg: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration.properties} sum {
         "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Total duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Total number of export requests for all sessions which have export requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnDuration} required [ "sum" ]
     */
    /** <code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Total duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Total number of export requests for all sessions which have export requests. */
    sum: number;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsModelOnAction {
     "allOf": [
       { "$ref": "#/components/schemas/ResponseAnalyticsModelOnDuration" },
       { "type": "object" }
     ]
   }
 */
/** */
export interface ShapeDiverResponseAnalyticsModelOnAction
    extends ShapeDiverResponseAnalyticsModelOnDuration {
    /**
     * NOTE
     * Due to an internal bug in Swagger, ShapeDiverResponseAnalyticsModelOnAction cannot extend
     * ResponseAnalyticsModelOnDuration for some reason.
     * Since this problem could not be solved, we have to describe the missing properties manually.
     *
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} properties {
         "count": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Number of (technical) sessions from all sources (duration) or from one specific source (app, embedded, backend, desktop), for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Number of sessions which have export requests.",
           "type": "number"
         },
         "billableCount": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Billable duration-based credit count for all sessions, based on maximum duration of 10 minutes per credit.<br/><br/><code>export</code>, <code>customize</code>: Billable duration-based credit count for sessions which have export requests, based on maximum duration of 10 minutes per credit.",
           "type": "number"
         },
         "min": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests.",
           "type": "number"
         },
         "max": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Cumulative distribution function of the duration, for all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Cumulative distribution function of the number of export requests per session, for sessions which have export requests.",
           "type": "number"
         },
         "avg": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Average duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Average number of export requests per session, for sessions which have export requests.",
           "type": "number"
         },
         "sum": {
           "description": "<code>duration</code>, <code>app</code>, <code>embedded</code>, <code>backend</code>, <code>desktop</code>: Total duration of all sessions for the given model and timestamp.<br/><br/><code>export</code>, <code>customize</code>: Total number of export requests for all sessions which have export requests.",
           "type": "number"
         }
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} required [ "count", "billableCount", "min", "max", "avg", "sum" ]
     */

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction.properties} sumApp {
         "description": "<code>customize</code>: Total number of actions, for ShapeDiver Platform sessions for which the type of action happened.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i>",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} required [ "sumApp" ]
     */
    /** <code>customize</code>: Total number of actions, for ShapeDiver Platform sessions for which the type of action happened.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i> */
    sumApp: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction.properties} sumBackend {
         "description": "<code>customize</code>: Total number of customization requests for backend sessions which have customization requests.<br/><br/><code>export</code>: Total number of export requests for backend sessions which have export requests.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i>",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} required [ "sumBackend" ]
     */
    /** <code>customize</code>: Total number of customization requests for backend sessions which have customization requests.<br/><br/><code>export</code>: Total number of export requests for backend sessions which have export requests.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i> */
    sumBackend: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction.properties} sumEmbedded {
         "description": "<code>customize</code>: Total number of customization requests for embedded sessions which have customization requests.<br/><br/><code>export</code>: Total number of export requests for embedded sessions which have export requests.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i>",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} required [ "sumEmbedded" ]
     */
    /** <code>customize</code>: Total number of customization requests for embedded sessions which have customization requests.<br/><br/><code>export</code>: Total number of export requests for embedded sessions which have export requests.<br/></br><i>Note: New property - will contain <code>0</code> for entries before November 2019.</i> */
    sumEmbedded: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction.properties} sumDesktop {
         "description": "<code>customize</code>: Total number of actions, for desktop client sessions for which the type of action happened.<br/></br><i>Note: New property - will contain <code>0</code> for entries before January 2021.</i>",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOnAction} required [ "sumDesktop" ]
     */
    /** <code>customize</code>: Total number of actions, for desktop client sessions for which the type of action happened.<br/></br><i>Note: New property - will contain <code>0</code> for entries before January 2021.</i> */
    sumDesktop: number;
}

// #endregion

// #region Credit Metrics

/**
 * @swagger {components.schemas} ResponseAnalyticsModelCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a model.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
   }
 */
/** Aggregated credit metrics for a model. */
export interface ShapeDiverResponseAnalyticsModelCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsModelCreditMetrics.properties} modelId {
         "description": "Requested model ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelCreditMetrics} required [ "modelId" ]
     */
    /** Requested model ID. */
    modelId: string;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsUserCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a user.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
    }
 */
/** Aggregated credit metrics for a user. */
export interface ShapeDiverResponseAnalyticsUserCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsUserCreditMetrics.properties} userId {
         "description": "Requested user ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsUserCreditMetrics} required [ "userId" ]
     */
    /** Requested user ID. */
    userId: string;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsOrganizationCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a organization.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
    }
 */
/** Aggregated credit metrics for a organization. */
export interface ShapeDiverResponseAnalyticsOrganizationCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsOrganizationCreditMetrics.properties} orgId {
         "description": "Requested organization ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsOrganizationCreditMetrics} required [ "orgId" ]
     */
    /** Requested organization ID. */
    orgId: string;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsSystemCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a system.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
    }
 */
/** Aggregated credit metrics for a system. */
export interface ShapeDiverResponseAnalyticsSystemCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsSystemCreditMetrics.properties} system {
         "description": "Requested system.",
         "type": "boolean"
       }
     * @swagger {components.schemas.ResponseAnalyticsSystemCreditMetrics} required [ "system" ]
     */
    /** Requested system ID. */
    system: true;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsModelUserCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a model-user.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
    }
 */
/** Aggregated credit metrics for a model-user. */
export interface ShapeDiverResponseAnalyticsModelUserCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsModelUserCreditMetrics.properties} modelId {
         "description": "Requested model ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelUserCreditMetrics} required [ "modelId" ]
     */
    /** Requested model ID. */
    modelId: string;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelUserCreditMetrics.properties} userId {
         "description": "Requested user ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelUserCreditMetrics} required [ "userId" ]
     */
    /** Requested user ID. */
    userId: string;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsModelOrganizationCreditMetrics {
     "allOf": [
       {
         "description": "Aggregated credit metrics for a model-organization.",
         "type": "object"
       },
       { "$ref": "#/components/schemas/ResponseAnalyticsBaseCreditMetrics" }
     ]
    }
 */
/** Aggregated credit metrics for a model-organization. */
export interface ShapeDiverResponseAnalyticsModelOrganizationCreditMetrics
    extends ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOrganizationCreditMetrics.properties} modelId {
         "description": "Requested model ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOrganizationCreditMetrics} required [ "modelId" ]
     */
    /** Requested model ID. */
    modelId: string;

    /**
     * @swagger {components.schemas.ResponseAnalyticsModelOrganizationCreditMetrics.properties} orgId {
         "description": "Requested organization ID.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsModelOrganizationCreditMetrics} required [ "orgId" ]
     */
    /** Requested model ID. */
    orgId: string;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsBaseCreditMetrics {
     "type": "object"
   }
 */
/** */
export interface ShapeDiverResponseAnalyticsBaseCreditMetrics {
    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} timestamp {
         "description": "Requested timestamp (hourly, daily, monthly, yearly).",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "timestamp" ]
     */
    /** Requested timestamp (hourly, daily, monthly, yearly). */
    timestamp: string;

    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} isCompilationDone {
         "description": "Aggregation for this timestamp has finished.",
         "type": "boolean"
       }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "isCompilationDone" ]
     */
    /** Aggregation for this timestamp has finished. */
    isCompilationDone: boolean;

    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} ar {
         "description": "Downloads of AR scenes.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "ar" ]
     */
    /** Downloads of AR scenes. */
    ar: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties.ar.properties} credits {
             "description": "Number of AR downloads charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties.ar} required [ "credits" ]
         */
        /** Number of AR downloads charged. */
        credits: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} loading {
         "$ref": "#/components/schemas/ResponseAnalyticsCreditMetricsLoading"
      }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "loading" ]
     */
    /** Started 10-second chunks of loading time processed by Geometry Workers. */
    loading: ShapeDiverResponseAnalyticsCreditMetricsLoading;

    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} limited {
         "$ref": "#/components/schemas/ResponseAnalyticsCreditMetricsRateLimited"
       }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "limited" ]
     */
    /** Rate-limited sessions. */
    limited: ShapeDiverResponseAnalyticsCreditMetricsRateLimited;

    /**
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics.properties} default {
         "$ref": "#/components/schemas/ResponseAnalyticsCreditMetricsDefaultSession"
       }
     * @swagger {components.schemas.ResponseAnalyticsBaseCreditMetrics} required [ "default" ]
     */
    /** Default sessions. */
    default: ShapeDiverResponseAnalyticsCreditMetricsDefaultSession;
}

/**
 * @swagger {components.schemas} ResponseAnalyticsCreditMetricsLoading {
     "description": "Information about loading times on the Geometry Workers.",
     "type": "object"
   }
 */
/** Information about loading times on the Geometry Workers. */
export interface ShapeDiverResponseAnalyticsCreditMetricsLoading {
    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsLoading.properties} credits {
         "description": "Number of started 10-second chunks charged.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsLoading} required [ "credits" ]
     */
    /** Number of started 10-second chunks charged. */
    credits: number;

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsLoading.properties} count {
         "description": "Number of load requests.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsLoading} required [ "count" ]
     */
    /** Number of load requests. */
    count: number;
}

/**
 * @swagger { components.schemas } ResponseAnalyticsCreditMetricsRateLimited {
     "description": "Aggregated metrics for 'rate-limited timeslot' sessions.",
     "type": "object"
   }
 */
/** Aggregated metrics for "rate-limited timeslot" sessions. */
export interface ShapeDiverResponseAnalyticsCreditMetricsRateLimited {
    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties} outputs {
         "description": "Pure output requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited} required [ "outputs" ]
     */
    /** Pure output requests. */
    outputs: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.outputs.properties} count {
             "description": "Number of pure output requests.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.outputs} required [ "count" ]
         */
        /** Number of pure output requests. */
        count: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties} exports {
         "description": "Pure export requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited} required [ "exports" ]
     */
    /** Pure export requests. */
    exports: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.exports.properties} credits {
             "description": "Number of pure export requests charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.exports} required [ "credits" ]
         */
        /** Number of pure export requests charged. */
        credits: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties} combined {
         "description": "Combined output and export requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited} required [ "combined" ]
     */
    /** Combined output and export requests. */
    combined: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.combined.properties} credits {
             "description": "Number of combined output and export requests charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.combined} required [ "credits" ]
         */
        /** Number of combined output and export requests charged. */
        credits: number;
    };

    /** 
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties} sessions {
         "description": "Session information.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited} required [ "sessions" ]
     */
    /** Session information. */
    sessions: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions.properties} count {
             "description": "Number of sessions.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions} required [ "count" ]
         */
        /** Number of sessions. */
        count: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions.properties} credits {
             "description": "Number of started 10-minute periods of sessions charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions} required [ "credits" ]
         */
        /** Number of started 10-minute periods of sessions charged. */
        credits: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions.properties} duration {
             "description": "The total duration of all sessions, in milliseconds.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.sessions} required [ "duration" ]
         */
        /** The total duration of all sessions, in milliseconds. */
        duration: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties} computations {
        "description": "Computations information.",
        "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited} required [ "computations" ]
     */
    /** Computations information. */
    computations: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations.properties} count {
             "description": "Number of computations.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations} required [ "count" ]
         */
        /** Number of computations. */
        count: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations.properties} credits {
             "description": "Number of finished 10-second chunks charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations} required [ "credits" ]
         */
        /** Number of finished 10-second chunks charged. */
        credits: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations.properties} duration {
             "description": "Total duration of computation time, in milliseconds.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations} required [ "duration" ]
         */
        /** Total duration of computation time, in milliseconds. */
        duration: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations.properties} countPerChunks {
             "description": "Count of computations per computation time expressed in started 10-second chunks.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsRateLimited.properties.computations} required [ "countPerChunks" ]
         */
        /**
         * Count of computations per computation time expressed in started 10 - second chunks.
         *
         * @example
         * {
         *   "1": 100,
         *   "2": 87,
         *   "5": 51,
         *   "7": 4
         * }
         * There were
         * - 100 computations below 10 seconds,
         * - 87 computations between 10 and 20 seconds,
         * - 51 computations between 40 and 50 seconds,
         * - 4 computations between 60 and 70 seconds.
         */
        countPerChunks: Record<string, number>;
    };
}

/**
 * @swagger {components.schemas} ResponseAnalyticsCreditMetricsDefaultSession {
     "description": "Aggregated metrics for 'default' sessions.",
     "type": "object"
   }
 */
/** Aggregated metrics for "default" sessions. */
export interface ShapeDiverResponseAnalyticsCreditMetricsDefaultSession {
    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties} outputs {
         "description": "Pure output requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession} required [ "outputs" ]
     */
    /** Pure output requests. */
    outputs: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.outputs.properties} credits {
             "description": "Number of pure output requests charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.outputs} required [ "credits" ]
         */
        /** Number of pure output requests charged. */
        credits: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties} exports {
         "description": "Pure export requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession} required [ "exports" ]
     */
    /** Pure export requests. */
    exports: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.exports.properties} credits {
             "description": "Number of pure export requests charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.exports} required [ "credits" ]
         */
        /** Number of pure export requests charged. */
        credits: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties} combined {
         "description": "Combined output and export requests.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession} required [ "combined" ]
     */
    /** Combined output and export requests. */
    combined: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.combined.properties} credits {
             "description": "Number of combined output and export requests charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.combined} required [ "credits" ]
         */
        /** Number of combined output and export requests charged. */
        credits: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties} sessions {
         "description": "Session information.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession} required [ "sessions" ]
     */
    /** Session information. */
    sessions: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.sessions.properties} count {
             "description": "Number of sessions.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.sessions} required [ "count" ]
         */
        /** Number of sessions. */
        count: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.sessions.properties} duration {
             "description": "The total duration of all sessions, in milliseconds.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.sessions} required [ "duration" ]
         */
        /** The total duration of all sessions, in milliseconds. */
        duration: number;
    };

    /**
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties} computations {
         "description": "Computations information.",
         "type": "object"
       }
     * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession} required [ "computations" ]
     */
    /** Computations information. */
    computations: {
        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations.properties} count {
             "description": "Number of computations.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations} required [ "count" ]
         */
        /** Number of computations. */
        count: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations.properties} credits {
             "description": "Number of finished 10-second chunks charged.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations} required [ "credits" ]
         */
        /** Number of finished 10-second chunks charged. */
        credits: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations.properties} duration {
             "description": "Total duration of computation time, in milliseconds.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations} required [ "duration" ]
         */
        /** Total duration of computation time, in milliseconds. */
        duration: number;

        /**
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations.properties} countPerChunks {
             "description": "Count of computations per computation time expressed in started 10-second chunks.",
             "type": "number"
           }
         * @swagger {components.schemas.ResponseAnalyticsCreditMetricsDefaultSession.properties.computations} required [ "countPerChunks" ]
         */
        /**
         * Count of computations per computation time expressed in started 10 - second chunks.
         *
         * @example
         * {
         *   "1": 100,
         *   "2": 87,
         *   "5": 51,
         *   "7": 4
         * }
         * There were
         * - 100 computations below 10 seconds,
         * - 87 computations between 10 and 20 seconds,
         * - 51 computations between 40 and 50 seconds,
         * - 4 computations between 60 and 70 seconds.
         */
        countPerChunks: Record<string, number>;
    };
}

// #endregion
