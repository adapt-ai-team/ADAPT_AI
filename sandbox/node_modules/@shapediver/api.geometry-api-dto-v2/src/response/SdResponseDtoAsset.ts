/**
 * @swagger {components.schemas} ResponseAsset {
     "description": "ShapeDiver API response for asset upload requests.",
     "type": "object"
   }
 */
/** ShapeDiver API response for asset upload requests. */
export interface ShapeDiverResponseDtoAsset {
    /**
     * @swagger {components.schemas.ResponseAsset.properties} file {
         "description": "A directory of parameter-IDs and asset-definitions.",
         "type": "object",
         "additionalProperties": {
           "$ref": "#/components/schemas/ResponseAssetDefinition"
         }
       }
     */
    /** A directory of parameter-IDs and asset-definitions. */
    file?: { [paramId: string]: ShapeDiverResponseDtoAssetDefinition };

    /**
     * @swagger {components.schemas.ResponseAsset.properties} sdtf {
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseAssetDefinition"
         }
       }
     */
    /** */
    sdtf?: ShapeDiverResponseDtoAssetDefinition[];

    /**
     * @swagger {components.schemas.ResponseAsset.properties} modelState {
         "allOf": [
           { "$ref": "#/components/schemas/ResponseAssetDefinition" },
           {
             "description": "The asset-definition of a Model-State image.",
             "type": "object"
           }
         ]
       }
     */
    /** The asset-definition of a Model-State image. */
    modelState?: ShapeDiverResponseDtoAssetDefinition;
}

/**
 * @swagger {components.schemas} ResponseAssetDefinition {
     "description": "Result part for the response to an upload request for file/sdTF parameters.",
     "type": "object"
   }
 */
/** Result part for the response to an upload request for file/sdTF parameters. */
export interface ShapeDiverResponseDtoAssetDefinition {
    /**
     * @swagger {components.schemas.ResponseAssetDefinition.properties} id {
         "description": "ID of the file to be uploaded.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAssetDefinition} required [ "id" ]
     */
    /** ID of the file to be uploaded. */
    id: string;

    /**
     * @swagger {components.schemas.ResponseAssetDefinition.properties} href {
         "description": "href the file should be uploaded to (typically a time-limited pre-signed url).",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseAssetDefinition} required [ "href" ]
     */
    /** href the file should be uploaded to (typically a time-limited pre-signed url). */
    href: string;

    /**
     * @swagger {components.schemas.ResponseAssetDefinition.properties} headers {
         "description": "HTTP headers to use when uploading an asset to ShapeDiver.",
         "$ref": "#/components/schemas/ResponseAssetUploadHeaders"
       }
     * @swagger {components.schemas.ResponseAssetDefinition} required [ "headers" ]
     */
    /** HTTP headers to use when uploading an asset to ShapeDiver. */
    headers: ShapeDiverResponseAssetUploadHeaders;
}

/**
 * @swagger {components.schemas} ResponseAssetUploadHeaders {
     "description": "HTTP headers to use when uploading an asset to ShapeDiver.",
     "type": "object"
   }
 */
/** HTTP headers to use when uploading an asset to ShapeDiver. */
export interface ShapeDiverResponseAssetUploadHeaders {
    /**
         * @swagger {components.schemas.ResponseAssetUploadHeaders.properties} contentDisposition {
             "description": "The value of the Content-Disposition HTTP header.",
             "type": "string"
           }
         */
    /** The value of the Content-Disposition HTTP header. */
    contentDisposition?: string;

    /**
         * @swagger {components.schemas.ResponseAssetUploadHeaders.properties} contentType {
             "description": "The value of the Content-Type HTTP header.",
             "type": "string"
           }
         * @swagger {components.schemas.ResponseAssetUploadHeaders.headers} required [ "contentType" ]
         */
    /** The value of the Content-Type HTTP header. */
    contentType: string;
}
