import { ShapeDiverResponseExport } from './SdResponseDtoExport';
import {
    ShapeDiverResponseModel,
    ShapeDiverResponseModelState,
    ShapeDiverResponseModelTexture,
} from './SdResponseDtoMisc';
import { ShapeDiverResponseOutput } from './SdResponseDtoOutput';

/**
 * @swagger {components.schemas} ResponseList {
     "description": "ShapeDiver API response of a list-request.",
     "type": "object"
   }
 */
/** ShapeDiver API response of a list-request. */
export interface ShapeDiverResponseList {
    /**
     * @swagger {components.schemas.ResponseList.properties} file {
         "description": "A directory of file objects.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseListFile"
         }
       }
     */
    /** A directory of file objects. */
    file?: ShapeDiverResponseListFile[];

    /**
     * @swagger {components.schemas.ResponseList.properties} sdtf {
         "description": "A directory of sdTF objects.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseListSdtf"
         }
       }
     */
    /** A directory of sdTF objects. */
    sdtf?: ShapeDiverResponseListSdtf[];

    /**
     * @swagger {components.schemas.ResponseList.properties} model {
         "description": "A directory of ShapeDiver models.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseModel"
         }
       }
     */
    /** A directory of ShapeDiver models. */
    model?: ShapeDiverResponseModel[];

    /**
     * @swagger {components.schemas.ResponseList.properties} modelState {
         "description": "A directory of Model-States.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseModelState"
         }
       }
     */
    /** A directory of ShapeDiver models. */
    modelState?: ShapeDiverResponseModelState[];

    /**
     * @swagger {components.schemas.ResponseList.properties} output {
         "description": "A directory of output versions.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseOutput"
         }
       }
     */
    /** A directory of output versions. */
    output?: ShapeDiverResponseOutput[];

    /**
     * @swagger {components.schemas.ResponseList.properties} export {
         "description": "A directory of export versions.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseExport"
         }
       }
     */
    /** A directory of export versions. */
    export?: ShapeDiverResponseExport[];

    /**
     * @swagger {components.schemas.ResponseList.properties} texture {
         "description": "A directory of model textures.",
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/ResponseModelTexture"
         }
       }
     */
    /** A directory of model textures. */
    texture?: ShapeDiverResponseModelTexture[];
}

/**
 * @swagger {components.schemas} ResponseListFile {
     "description": "Result part for the response to a list request for file objects.",
     "type": "object"
   }
 */
/** Result part for the response to a list request for file objects. */
export interface ShapeDiverResponseListFile {
    /**
     * @swagger {components.schemas.ResponseListFile.properties} id {
         "description": "ID of the file.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseListFile} required [ "id" ]
     */
    /** ID of the file. */
    id: string;

    /**
     * @swagger {components.schemas.ResponseListFile.properties} parameterId {
         "description": "ID of the parameter that the file is assigned to.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseListFile} required [ "parameterId" ]
     */
    /** ID of the parameter that the file is assigned to. */
    parameterId: string;

    /**
     * @swagger {components.schemas.ResponseListFile.properties} size {
         "description": "The size of the file in bytes.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseListFile} required [ "size" ]
     */
    /** The size of the file in bytes. */
    size: number;

    /**
     * @swagger {components.schemas.ResponseListFile.properties} filename {
         "description": "The name of the file, when specified during the upload.",
         "type": "string"
       }
     */
    /** The name of the file, when specified during the upload. */
    filename?: string;
}

/**
 * @swagger {components.schemas} ResponseListSdtf {
     "description": "Result part for the response to a list request for sdTF objects.",
     "type": "object"
   }
 */
/** Result part for the response to a list request for sdTF objects. */
export interface ShapeDiverResponseListSdtf {
    /**
     * @swagger {components.schemas.ResponseListSdtf.properties} id {
         "description": "ID of the sdTF.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseListSdtf} required [ "id" ]
     */
    /** ID of the sdTF. */
    id: string;

    /**
     * @swagger {components.schemas.ResponseListSdtf.properties} namespace {
         "description": "The namespace of the sdTF.",
         "type": "string"
       }
     * @swagger {components.schemas.ResponseListSdtf} required [ "namespace" ]
     */
    /** The namespace of the sdTF. */
    namespace: string;

    /**
     * @swagger {components.schemas.ResponseListSdtf.properties} size {
         "description": "The size of the sdTF in bytes.",
         "type": "number"
       }
     * @swagger {components.schemas.ResponseListSdtf} required [ "size" ]
     */
    /** The size of the sdTF in bytes. */
    size: number;
}
