/**
 * @swagger {components.schemas} RequestAnalyticsModelPart {
     "description": "Parameters of a single model-session analytics request. When multiple model IDs or timestamps are requested, the resulting response-item represents an aggregation of the requested data.",
     "type": "object"
   }
 */
/** Parameters of a single model-session analytics request. When multiple model IDs or timestamps are requested, the resulting response-item represents an aggregation of the requested data. */
export interface ShapeDiverRequestAnalyticsModelPart {
    /**
     * @swagger {components.schemas.RequestAnalyticsModelPart.properties} modelid {
         "oneOf": [
           {
             "description": "A single model ID.",
             "type": "string"
           },
           {
             "description": "Multiple model IDs are aggregated and result in a single statistic object.",
             "type": "array",
             "items": { "type": "string" }
           }
         ]
       }
     * @swagger {components.schemas.RequestAnalyticsModelPart} required [ "modelid" ]
     */
    /** Either a single or multiple model IDs. Multiple model IDs are aggregated and result in a single statistic object. */
    modelid: string | string[];

    /**
     * @swagger {components.schemas.RequestAnalyticsModelPart.properties} timestamp {
         "oneOf": [
           {
             "description": "A single timestamp.",
             "type": "string",
             "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
             "examples": {
               "year": {
                 "value": "2021",
                 "summary": "YYYY"
               },
               "year-month": {
                 "value": "202112",
                 "summary": "YYYYMM"
               },
               "year-month-day": {
                 "value": "20211225",
                 "summary": "YYYYMMDD"
               },
               "year-month-day-hour": {
                 "value": "2021122514",
                 "summary": "YYYYMMDDhh"
               }
             }
           },
           {
             "description": "Multiple timestamps are aggregated and result in a single statistic object.",
             "type": "array",
             "items": { "type": "string" },
             "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
             "examples": {
               "mixed": {
                 "value": "['2021', '2022010101']"
               }
             }
           }
         ]
       }
     */
    /** Either a single or multiple timestamps. Multiple timestamps are aggregated and result in a single statistic object. */
    timestamp?: string | string[];

    /**
     * @swagger {components.schemas.RequestAnalyticsModelPart.properties} timestamp_from {
         "description": "Allows to define the beginning of a time range, instead of specifying individual timestamps.",
         "type": "string",
         "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
         "examples": {
           "year": {
             "value": "2021",
             "summary": "YYYY"
           },
           "year-month": {
             "value": "202112",
             "summary": "YYYYMM"
           },
           "year-month-day": {
             "value": "20211225",
             "summary": "YYYYMMDD"
           },
           "year-month-day-hour": {
             "value": "2021122514",
             "summary": "YYYYMMDDhh"
           }
         }
       }
     */
    /** Allows to define the beginning of a time range, instead of specifying individual timestamps. */
    timestamp_from?: string;

    /**
     * @swagger {components.schemas.RequestAnalyticsModelPart.properties} timestamp_to {
         "description": "Allows to define the ending of a time range, instead of specifying individual timestamps.",
         "type": "string",
         "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
         "examples": {
           "year": {
             "value": "2021",
             "summary": "YYYY"
           },
           "year-month": {
             "value": "202112",
             "summary": "YYYYMM"
           },
           "year-month-day": {
             "value": "20211225",
             "summary": "YYYYMMDD"
           },
           "year-month-day-hour": {
             "value": "2021122514",
             "summary": "YYYYMMDDhh"
           }
         }
       }
     */
    /** Allows to define the ending of a time range, instead of specifying individual timestamps. */
    timestamp_to?: string;
}

/**
 * @swagger {components.schemas} RequestAnalyticsModel {
     "description": "Body of a model statistics request. Every request-item results in exactly one response-item, whereby the order of response-items corresponds to the order of the request-items.",
     "type": "object",
     "properties": {
       "parameters": {
         "type": "array",
         "items": {
           "$ref": "#/components/schemas/RequestAnalyticsModelPart"
         }
       }
     }
   }
 */
/** Body of a model statistics request. Every request-item results in exactly one response-item, whereby the order of response-items corresponds to the order of the request-items. */
export type ShapeDiverRequestAnalyticsModel = {
    parameters: ShapeDiverRequestAnalyticsModelPart[];
};

/**
 * @swagger {components.schemas} RequestAnalyticsCreditMetricsId {
     "describe": "Either a single or multiple IDs. Multiple IDs are aggregated and result in a single credit metrics object.",
     "oneOf": [
       {
         "description": "Model metrics",
         "type": "object",
         "properties": {
           "modelIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           }
         },
         "required": [ "modelIds" ]
       },
       {
         "description": "User metrics",
         "type": "object",
         "properties": {
           "userIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           }
         },
         "required": [ "userIds" ]
       },
       {
         "description": "Organization metrics",
         "type": "object",
         "properties": {
           "orgIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           }
         },
         "required": [ "orgIds" ]
       },
       {
         "description": "System-wide metrics",
         "type": "object",
         "properties": {
           "systems": { "type": "boolean" }
         },
         "required": [ "systems" ]
       },
       {
         "description": "Model-User metrics",
         "type": "object",
         "properties": {
           "modelIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           },
           "userIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           }
         },
         "required": [ "modelIds", "userIds" ]
       },
       {
         "description": "Model-Organization metrics",
         "type": "object",
         "properties": {
           "modelIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           },
           "orgIds": {
             "oneOf": [
               { "type": "string" },
               {
                 "type": "array",
                 "items": { "type": "string" }
               }
             ]
           }
         },
         "required": [ "modelIds", "orgIds" ]
       }
     ]
   }
 * @swagger {components.schemas.RequestAnalyticsCreditMetricsId} required [ "id" ]
 */
/**
 * Either a single or multiple IDs. Multiple IDs are aggregated and result in a single credit
 * metrics object.
 */
export type ShapeDiverRequestAnalyticsCreditMetricsId =
    | { modelIds: string | string[] }
    | { userIds: string | string[] }
    | { orgIds: string | string[] }
    | { systems: true }
    | { modelIds: string | string[]; userIds: string | string[] }
    | { modelIds: string | string[]; orgIds: string | string[] };

/**
 * @swagger {components.schemas} RequestAnalyticsCreditMetricsPart {
     "description": "Parameters of a credit metrics request. When IDs or timestamps are requested, the resulting response-item represents an aggregation of the requested data.",
     "type": "object"
   }
 */
/**
 * Parameters of a credit metrics request. When IDs or timestamps are requested, the resulting
 * response-item represents an aggregation of the requested data.
 */
export interface ShapeDiverRequestAnalyticsCreditMetricsPart {
    /**
     * @swagger {components.schemas.RequestAnalyticsCreditMetricsPart.properties} id {
         "$ref": "#/components/schemas/RequestAnalyticsCreditMetricsId"
       }
     * @swagger {components.schemas.RequestAnalyticsCreditMetricsPart} required [ "id" ]
     */
    /** */
    id: ShapeDiverRequestAnalyticsCreditMetricsId;

    /**
     * @swagger {components.schemas.RequestAnalyticsCreditMetricsPart.properties} timestamp {
         "oneOf": [
           {
             "description": "A single timestamp.",
             "type": "string",
             "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
             "examples": {
               "year": {
                 "value": "2021",
                 "summary": "YYYY"
               },
               "year-month": {
                 "value": "202112",
                 "summary": "YYYYMM"
               },
               "year-month-day": {
                 "value": "20211225",
                 "summary": "YYYYMMDD"
               },
               "year-month-day-hour": {
                 "value": "2021122514",
                 "summary": "YYYYMMDDhh"
               }
             }
           },
           {
             "description": "Multiple timestamps are aggregated and result in a single credit metrics object.",
             "type": "array",
             "items": { "type": "string" },
             "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
             "examples": {
               "mixed": {
                 "value": "['2021', '2022010101']"
               }
             }
           }
         ]
       }
     */
    /**
     * Either a single or multiple timestamps. Multiple timestamps are aggregated and result in a
     * single credit metrics object.
     */
    timestamp?: string | string[];

    /**
     * @swagger {components.schemas.RequestAnalyticsCreditMetricsPart.properties} timestamp_from {
         "description": "Allows to define the beginning of a time range, instead of specifying individual timestamps.",
         "type": "string",
         "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
         "examples": {
           "year": {
             "value": "2021",
             "summary": "YYYY"
           },
           "year-month": {
             "value": "202112",
             "summary": "YYYYMM"
           },
           "year-month-day": {
             "value": "20211225",
             "summary": "YYYYMMDD"
           },
           "year-month-day-hour": {
             "value": "2021122514",
             "summary": "YYYYMMDDhh"
           }
         }
       }
     */
    /**
     * Allows to define the beginning of a time range, instead of specifying individual timestamps.
     */
    timestamp_from?: string;

    /**
     * @swagger {components.schemas.RequestAnalyticsCreditMetricsPart.properties} timestamp_to {
         "description": "Allows to define the ending of a time range, instead of specifying individual timestamps.",
         "type": "string",
         "pattern": "^\\d{4}(?:\\d{2})?(?:\\d{2})?(?:\\d{2})?$",
         "examples": {
           "year": {
             "value": "2021",
             "summary": "YYYY"
           },
           "year-month": {
             "value": "202112",
             "summary": "YYYYMM"
           },
           "year-month-day": {
             "value": "20211225",
             "summary": "YYYYMMDD"
           },
           "year-month-day-hour": {
             "value": "2021122514",
             "summary": "YYYYMMDDhh"
           }
         }
       }
     */
    /** Allows to define the ending of a time range, instead of specifying individual timestamps. */
    timestamp_to?: string;
}

/**
 * @swagger {components.schemas} RequestAnalyticsCreditMetrics {
     "description": "Body of a credit metrics request. Every request-item results in exactly one response-item, whereby the order of response-items corresponds to the order of the request-items.",
     "type": "object",
     "properties": {
       "parameters": {
         "type": "array",
           "items": {
             "$ref": "#/components/schemas/RequestAnalyticsCreditMetricsPart"
           }
         }
     }
   }
 */
/**
 * Body of a credit metrics request. Every request-item results in exactly one response-item,
 * whereby the order of response-items corresponds to the order of the request-items.
 */
export type ShapeDiverRequestAnalyticsCreditMetrics = {
    parameters: ShapeDiverRequestAnalyticsCreditMetricsPart[];
};
