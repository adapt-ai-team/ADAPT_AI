export interface ShapeDiverResponseSystem {
    minions?: ShapeDiverResponseSystemMinions;
    workers?: ShapeDiverResponseSystemWorkers;
}
export interface ShapeDiverResponseSystemMinions {
    instances: {
        [processId: string]: ShapeDiverResponseSystemMinionProcess;
    };
    tasks: {
        [taskType: string]: ShapeDiverResponseSystemMinionTask;
    };
}
export interface ShapeDiverResponseSystemMinionProcess {
    tasks: {
        [taskType: string]: ShapeDiverResponseSystemMinionTask;
    };
}
export interface ShapeDiverResponseSystemMinionTask {
    avgDuration: number;
    maxDuration: number;
    avgIntervalDiff: number;
    maxIntervalDiff: number;
    interval: number;
    latest: string;
    count: number;
}
export interface ShapeDiverResponseSystemWorkers {
    grasshopperVersion: string;
    plugins: ShapeDiverResponseSystemWorkerPlugins;
    rhinoVersion: string;
    shapeDiverVersion: string;
}
export interface ShapeDiverResponseSystemWorkerPlugins {
    installed: ShapeDiverResponseSystemWorkerPluginInstalled[];
    allowed: ShapeDiverResponseSystemWorkerPluginAllowed[];
    inconsistent: string[];
}
export interface ShapeDiverResponseSystemWorkerPluginInstalled {
    id: string;
    name: string;
    version: string;
    authorName: string;
    authorContact: string;
    description: string;
    assemblyVersion: string;
    assemblyFullName: string;
    isCoreLibrary: boolean;
    license: number;
    loadingMechanism: number;
    location: string;
}
export interface ShapeDiverResponseSystemWorkerPluginAllowed {
    id: string;
    name: string;
    minVersion: string;
    maxVersion: string;
    authorName?: string;
    description?: string;
    href?: string;
    allowFallbackToAssemblyVersion: boolean;
    checkMajorMinorVersionOnly: boolean;
    checkIfInstalled: boolean;
    previousIds: string[];
    allowedComponents: ShapeDiverResponseSystemWorkerPluginComponent[];
    disallowedComponents: ShapeDiverResponseSystemWorkerPluginComponent[];
}
export interface ShapeDiverResponseSystemWorkerPluginComponent {
    id: string;
    name: string;
}
//# sourceMappingURL=SdResponseDtoSystem.d.ts.map