"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapeDiverResponseModelCleanupProcessType = exports.ShapeDiverResponseTicketType = exports.ShapeDiverResponseParameterStructure = exports.ShapeDiverResponseParameterVisualization = exports.ShapeDiverResponseParameterType = exports.ShapeDiverResponseModelStatus = void 0;
const SdCommonModel_1 = require("../commons/SdCommonModel");
const SdCommonsTicket_1 = require("../commons/SdCommonsTicket");
exports.ShapeDiverResponseModelStatus = Object.assign({}, SdCommonModel_1.ShapeDiverCommonsModelStatus);
var ShapeDiverResponseParameterType;
(function (ShapeDiverResponseParameterType) {
    ShapeDiverResponseParameterType["S_BITMAP"] = "sBitmap";
    ShapeDiverResponseParameterType["S_BOOL"] = "sBool";
    ShapeDiverResponseParameterType["S_BOX"] = "sBox";
    ShapeDiverResponseParameterType["S_BREP"] = "sBrep";
    ShapeDiverResponseParameterType["S_CIRCLE"] = "sCircle";
    ShapeDiverResponseParameterType["S_COLOR"] = "sColor";
    ShapeDiverResponseParameterType["S_CURVE"] = "sCurve";
    ShapeDiverResponseParameterType["S_DOMAIN"] = "sDomain";
    ShapeDiverResponseParameterType["S_DOMAIN_2D"] = "sDomain2D";
    ShapeDiverResponseParameterType["S_INTEGER"] = "sInteger";
    ShapeDiverResponseParameterType["S_LINE"] = "sLine";
    ShapeDiverResponseParameterType["S_MESH"] = "sMesh";
    ShapeDiverResponseParameterType["S_NUMBER"] = "sNumber";
    ShapeDiverResponseParameterType["S_PLANE"] = "sPlane";
    ShapeDiverResponseParameterType["S_POINT"] = "sPoint";
    ShapeDiverResponseParameterType["S_RECTANGLE"] = "sRectangle";
    ShapeDiverResponseParameterType["S_STRING"] = "sString";
    ShapeDiverResponseParameterType["S_SUBDIV"] = "sSubdiv";
    ShapeDiverResponseParameterType["S_SURFACE"] = "sSurface";
    ShapeDiverResponseParameterType["S_TIME"] = "sTime";
    ShapeDiverResponseParameterType["S_VECTOR"] = "sVector";
    ShapeDiverResponseParameterType["BOOL"] = "Bool";
    ShapeDiverResponseParameterType["COLOR"] = "Color";
    ShapeDiverResponseParameterType["DRAWING"] = "Drawing";
    ShapeDiverResponseParameterType["EVEN"] = "Even";
    ShapeDiverResponseParameterType["FILE"] = "File";
    ShapeDiverResponseParameterType["FLOAT"] = "Float";
    ShapeDiverResponseParameterType["INTERACTION"] = "Interaction";
    ShapeDiverResponseParameterType["INT"] = "Int";
    ShapeDiverResponseParameterType["ODD"] = "Odd";
    ShapeDiverResponseParameterType["STRING"] = "String";
    ShapeDiverResponseParameterType["STRINGLIST"] = "StringList";
    ShapeDiverResponseParameterType["TIME"] = "Time";
    ShapeDiverResponseParameterType["UNKNOWN"] = "unknown";
})(ShapeDiverResponseParameterType || (exports.ShapeDiverResponseParameterType = ShapeDiverResponseParameterType = {}));
var ShapeDiverResponseParameterVisualization;
(function (ShapeDiverResponseParameterVisualization) {
    ShapeDiverResponseParameterVisualization["UNKNOWN"] = "unknown";
    ShapeDiverResponseParameterVisualization["BUTTON"] = "button";
    ShapeDiverResponseParameterVisualization["CALENDAR"] = "calendar";
    ShapeDiverResponseParameterVisualization["CHECKLIST"] = "checklist";
    ShapeDiverResponseParameterVisualization["CLOCK"] = "clock";
    ShapeDiverResponseParameterVisualization["CYCLE"] = "cycle";
    ShapeDiverResponseParameterVisualization["DIAL"] = "dial";
    ShapeDiverResponseParameterVisualization["DROPDOWN"] = "dropdown";
    ShapeDiverResponseParameterVisualization["GEOMETRY"] = "geometry";
    ShapeDiverResponseParameterVisualization["IMAGE"] = "image";
    ShapeDiverResponseParameterVisualization["SEQUENCE"] = "sequence";
    ShapeDiverResponseParameterVisualization["SLIDER"] = "slider";
    ShapeDiverResponseParameterVisualization["SWATCH"] = "swatch";
    ShapeDiverResponseParameterVisualization["TEXT"] = "text";
    ShapeDiverResponseParameterVisualization["TOGGLE"] = "toggle";
})(ShapeDiverResponseParameterVisualization || (exports.ShapeDiverResponseParameterVisualization = ShapeDiverResponseParameterVisualization = {}));
var ShapeDiverResponseParameterStructure;
(function (ShapeDiverResponseParameterStructure) {
    ShapeDiverResponseParameterStructure["ITEM"] = "item";
    ShapeDiverResponseParameterStructure["LIST"] = "list";
    ShapeDiverResponseParameterStructure["TREE"] = "tree";
})(ShapeDiverResponseParameterStructure || (exports.ShapeDiverResponseParameterStructure = ShapeDiverResponseParameterStructure = {}));
exports.ShapeDiverResponseTicketType = Object.assign({}, SdCommonsTicket_1.ShapeDiverCommonsTicketType);
var ShapeDiverResponseModelCleanupProcessType;
(function (ShapeDiverResponseModelCleanupProcessType) {
    ShapeDiverResponseModelCleanupProcessType["DELETE_EXPORT_VERSION"] = "delete_export_version";
    ShapeDiverResponseModelCleanupProcessType["DELETE_MODEL_TEXTURE"] = "delete_model_texture";
    ShapeDiverResponseModelCleanupProcessType["DELETE_OUTPUT_VERSION"] = "delete_output_version";
})(ShapeDiverResponseModelCleanupProcessType || (exports.ShapeDiverResponseModelCleanupProcessType = ShapeDiverResponseModelCleanupProcessType = {}));
//# sourceMappingURL=SdResponseDtoMisc.js.map