import { ShapeDiverCommonsModelStatus } from '../commons/SdCommonModel';
import { ShapeDiverCommonsModelComputationStatus } from '../commons/SdCommonModelComputation';
import { ShapeDiverCommonsTicket, ShapeDiverCommonsTicketType } from '../commons/SdCommonsTicket';
import { ShapeDiverRequestCustomization } from './SdRequestDtoExportOutput';
import { ShapeDiverRequestFileUploadPart } from './SdRequestDtoUpload';
export declare const ShapeDiverRequestTicketType: {
    BACKEND: ShapeDiverCommonsTicketType.BACKEND;
    NONE: ShapeDiverCommonsTicketType.NONE;
};
export type ShapeDiverRequestTicketType = (typeof ShapeDiverRequestTicketType)[keyof typeof ShapeDiverRequestTicketType];
export interface ShapeDiverRequestTicket extends ShapeDiverCommonsTicket {
    type: ShapeDiverRequestTicketType;
}
export type ShapeDiverRequestConfigure = {
    [key: string]: any;
};
export declare enum ShapeDiverRequestLogMessageLevel {
    INFO = 0,
    WARNING = 1,
    ERROR = 2
}
export interface ShapeDiverRequestLogMessage {
    level: ShapeDiverRequestLogMessageLevel;
    message: string;
}
export interface ShapeDiverRequestAuthorizationGroup {
    models?: string[];
    users?: string[];
    organizations?: string[];
}
export interface ShapeDiverRequestModelState {
    parameters: ShapeDiverRequestCustomization;
    data?: Record<string, any>;
    image?: ShapeDiverRequestFileUploadPart;
    arSceneId?: string;
}
export declare enum ShapeDiverRequestGltfUploadQueryConversion {
    NONE = "none",
    SCENE = "scene",
    USDZ = "usdz"
}
export declare enum ShapeDiverRequestModelComputationQueryOrder {
    ASC = "asc",
    DESC = "desc"
}
export declare enum ShapeDiverRequestModelComputationQueryStatus {
    SUCCESS = "success",
    TIMEOUT = "timeout",
    OTHER = "other",
    ALL = "*"
}
export declare enum ShapeDiverRequestModelComputationQueryType {
    COMPUTATION = "computation",
    EXPORT = "export",
    LOAD = "load",
    ALL = "*"
}
export declare const ShapeDiverRequestQueryModelStatus: {
    UNKNOWN: ShapeDiverCommonsModelStatus.UNKNOWN;
    NOT_UPLOADED: ShapeDiverCommonsModelStatus.NOT_UPLOADED;
    UPLOADED: ShapeDiverCommonsModelStatus.UPLOADED;
    PENDING: ShapeDiverCommonsModelStatus.PENDING;
    CONFIRMED: ShapeDiverCommonsModelStatus.CONFIRMED;
    DENIED: ShapeDiverCommonsModelStatus.DENIED;
    DELETED: ShapeDiverCommonsModelStatus.DELETED;
};
export type ShapeDiverRequestQueryModelStatus = (typeof ShapeDiverRequestQueryModelStatus)[keyof typeof ShapeDiverRequestQueryModelStatus];
export declare const ShapeDiverRequestQueryModelComputationStatus: {
    SUCCESS: ShapeDiverCommonsModelComputationStatus.SUCCESS;
    TIMEOUT: ShapeDiverCommonsModelComputationStatus.TIMEOUT;
    CHECK_CONFIRMED: ShapeDiverCommonsModelComputationStatus.CHECK_CONFIRMED;
    CHECK_DENIED: ShapeDiverCommonsModelComputationStatus.CHECK_DENIED;
    CHECK_PENDING: ShapeDiverCommonsModelComputationStatus.CHECK_PENDING;
    MAX_COMBINED_ASSET_SIZE_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_COMBINED_ASSET_SIZE_EXCEEDED;
    MAX_DB_SIZE_PER_OUTPUT_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_DB_SIZE_PER_OUTPUT_EXCEEDED;
    MAX_PARTS_PER_OUTPUT_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_PARTS_PER_OUTPUT_EXCEEDED;
    MAX_ASSET_PARTS_PER_OUTPUT_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_ASSET_PARTS_PER_OUTPUT_EXCEEDED;
    MAX_TRANSFORMATIONS_PER_OUTPUT_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_TRANSFORMATIONS_PER_OUTPUT_EXCEEDED;
    MAX_PARTS_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_PARTS_EXCEEDED;
    MAX_ASSET_PARTS_EXCEEDED: ShapeDiverCommonsModelComputationStatus.MAX_ASSET_PARTS_EXCEEDED;
    RECOVERABLE_ERROR: ShapeDiverCommonsModelComputationStatus.RECOVERABLE_ERROR;
    UNRECOVERABLE_ERROR: ShapeDiverCommonsModelComputationStatus.UNRECOVERABLE_ERROR;
    NO_OUTPUT_DATA_FOR_DEFAULT_PARAMETER_VALUES: ShapeDiverCommonsModelComputationStatus.NO_OUTPUT_DATA_FOR_DEFAULT_PARAMETER_VALUES;
    MODEL_WITHOUT_GEOMETRY_OUTPUT: ShapeDiverCommonsModelComputationStatus.MODEL_WITHOUT_GEOMETRY_OUTPUT;
    UNKNOWN: ShapeDiverCommonsModelComputationStatus.UNKNOWN;
};
export type ShapeDiverRequestQueryModelComputationStatus = (typeof ShapeDiverRequestQueryModelComputationStatus)[keyof typeof ShapeDiverRequestQueryModelComputationStatus];
//# sourceMappingURL=SdRequestDto.d.ts.map