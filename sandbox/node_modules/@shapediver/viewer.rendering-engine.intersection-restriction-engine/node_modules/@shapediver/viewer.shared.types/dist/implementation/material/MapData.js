"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MapData_asData, _MapData_blob, _MapData_center, _MapData_color, _MapData_data, _MapData_flipY, _MapData_image, _MapData_magFilter, _MapData_minFilter, _MapData_offset, _MapData_repeat, _MapData_rotation, _MapData_texCoord, _MapData_wrapS, _MapData_wrapT;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MapData = void 0;
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
const gl_matrix_1 = require("gl-matrix");
const IMapData_1 = require("../../interfaces/data/material/IMapData");
class MapData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    // #endregion Properties (15)
    // #region Constructors (1)
    constructor(image, properties, id, version) {
        super(id, version);
        // #region Properties (15)
        _MapData_asData.set(this, false);
        _MapData_blob.set(this, void 0);
        _MapData_center.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_color.set(this, void 0);
        _MapData_data.set(this, void 0);
        _MapData_flipY.set(this, true);
        _MapData_image.set(this, void 0);
        _MapData_magFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);
        _MapData_minFilter.set(this, IMapData_1.TEXTURE_FILTERING.NONE);
        _MapData_offset.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_repeat.set(this, gl_matrix_1.vec2.fromValues(1, 1));
        _MapData_rotation.set(this, 0);
        _MapData_texCoord.set(this, void 0);
        _MapData_wrapS.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);
        _MapData_wrapT.set(this, IMapData_1.TEXTURE_WRAPPING.REPEAT);
        __classPrivateFieldSet(this, _MapData_image, image, "f");
        __classPrivateFieldSet(this, _MapData_asData, properties && properties.asData !== undefined
            ? properties.asData
            : false, "f");
        __classPrivateFieldSet(this, _MapData_data, properties ? properties.data : undefined, "f");
        __classPrivateFieldSet(this, _MapData_blob, properties ? properties.blob : undefined, "f");
        __classPrivateFieldSet(this, _MapData_wrapS, properties && properties.wrapS !== undefined
            ? properties.wrapS
            : IMapData_1.TEXTURE_WRAPPING.REPEAT, "f");
        __classPrivateFieldSet(this, _MapData_wrapT, properties && properties.wrapT !== undefined
            ? properties.wrapT
            : IMapData_1.TEXTURE_WRAPPING.REPEAT, "f");
        __classPrivateFieldSet(this, _MapData_minFilter, properties && properties.minFilter !== undefined
            ? properties.minFilter
            : IMapData_1.TEXTURE_FILTERING.NONE, "f");
        __classPrivateFieldSet(this, _MapData_magFilter, properties && properties.magFilter !== undefined
            ? properties.magFilter
            : IMapData_1.TEXTURE_FILTERING.NONE, "f");
        __classPrivateFieldSet(this, _MapData_center, properties && properties.center !== undefined
            ? properties.center
            : gl_matrix_1.vec2.fromValues(0, 0), "f");
        __classPrivateFieldSet(this, _MapData_color, properties ? properties.color : undefined, "f");
        __classPrivateFieldSet(this, _MapData_offset, properties && properties.offset !== undefined
            ? properties.offset
            : gl_matrix_1.vec2.fromValues(0, 0), "f");
        __classPrivateFieldSet(this, _MapData_repeat, properties && properties.repeat !== undefined
            ? properties.repeat
            : gl_matrix_1.vec2.fromValues(1, 1), "f");
        __classPrivateFieldSet(this, _MapData_rotation, properties && properties.rotation !== undefined
            ? properties.rotation
            : 0, "f");
        __classPrivateFieldSet(this, _MapData_texCoord, properties ? properties.texCoord : undefined, "f");
        __classPrivateFieldSet(this, _MapData_flipY, properties && properties.flipY !== undefined
            ? properties.flipY
            : true, "f");
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (30)
    get asData() {
        return __classPrivateFieldGet(this, _MapData_asData, "f");
    }
    set asData(value) {
        __classPrivateFieldSet(this, _MapData_asData, value, "f");
    }
    get blob() {
        return __classPrivateFieldGet(this, _MapData_blob, "f");
    }
    set blob(value) {
        __classPrivateFieldSet(this, _MapData_blob, value, "f");
    }
    get center() {
        return __classPrivateFieldGet(this, _MapData_center, "f");
    }
    set center(value) {
        __classPrivateFieldSet(this, _MapData_center, value, "f");
    }
    get color() {
        return __classPrivateFieldGet(this, _MapData_color, "f");
    }
    set color(value) {
        __classPrivateFieldSet(this, _MapData_color, value, "f");
    }
    get data() {
        return __classPrivateFieldGet(this, _MapData_data, "f");
    }
    set data(value) {
        __classPrivateFieldSet(this, _MapData_data, value, "f");
    }
    get flipY() {
        return __classPrivateFieldGet(this, _MapData_flipY, "f");
    }
    set flipY(value) {
        __classPrivateFieldSet(this, _MapData_flipY, value, "f");
    }
    get image() {
        return __classPrivateFieldGet(this, _MapData_image, "f");
    }
    set image(value) {
        __classPrivateFieldSet(this, _MapData_image, value, "f");
    }
    get magFilter() {
        return __classPrivateFieldGet(this, _MapData_magFilter, "f");
    }
    set magFilter(value) {
        __classPrivateFieldSet(this, _MapData_magFilter, value, "f");
    }
    get minFilter() {
        return __classPrivateFieldGet(this, _MapData_minFilter, "f");
    }
    set minFilter(value) {
        __classPrivateFieldSet(this, _MapData_minFilter, value, "f");
    }
    get offset() {
        return __classPrivateFieldGet(this, _MapData_offset, "f");
    }
    set offset(value) {
        __classPrivateFieldSet(this, _MapData_offset, value, "f");
    }
    get repeat() {
        return __classPrivateFieldGet(this, _MapData_repeat, "f");
    }
    set repeat(value) {
        __classPrivateFieldSet(this, _MapData_repeat, value, "f");
    }
    get rotation() {
        return __classPrivateFieldGet(this, _MapData_rotation, "f");
    }
    set rotation(value) {
        __classPrivateFieldSet(this, _MapData_rotation, value, "f");
    }
    get texCoord() {
        return __classPrivateFieldGet(this, _MapData_texCoord, "f");
    }
    set texCoord(value) {
        __classPrivateFieldSet(this, _MapData_texCoord, value, "f");
    }
    get wrapS() {
        return __classPrivateFieldGet(this, _MapData_wrapS, "f");
    }
    set wrapS(value) {
        __classPrivateFieldSet(this, _MapData_wrapS, value, "f");
    }
    get wrapT() {
        return __classPrivateFieldGet(this, _MapData_wrapT, "f");
    }
    set wrapT(value) {
        __classPrivateFieldSet(this, _MapData_wrapT, value, "f");
    }
    // #endregion Public Getters And Setters (30)
    // #region Public Methods (1)
    clone() {
        return new MapData(this.image, {
            asData: this.asData,
            data: this.data,
            blob: this.blob,
            wrapS: this.wrapS,
            wrapT: this.wrapT,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            center: this.center,
            color: this.color,
            offset: this.offset,
            repeat: this.repeat,
            rotation: this.rotation,
            texCoord: this.texCoord,
            flipY: this.flipY,
        }, this.id, this.version);
    }
}
exports.MapData = MapData;
_MapData_asData = new WeakMap(), _MapData_blob = new WeakMap(), _MapData_center = new WeakMap(), _MapData_color = new WeakMap(), _MapData_data = new WeakMap(), _MapData_flipY = new WeakMap(), _MapData_image = new WeakMap(), _MapData_magFilter = new WeakMap(), _MapData_minFilter = new WeakMap(), _MapData_offset = new WeakMap(), _MapData_repeat = new WeakMap(), _MapData_rotation = new WeakMap(), _MapData_texCoord = new WeakMap(), _MapData_wrapS = new WeakMap(), _MapData_wrapT = new WeakMap();
//# sourceMappingURL=MapData.js.map