import { ShapeDiverResponseParameter } from "@shapediver/sdk.geometry-api-sdk-v2";
import { InteractionParameterSettingsType } from "@shapediver/viewer.shared.types";
import { IGumballParameter } from "../../../interfaces/dto/interaction/IGumballParameter";
import { SessionEngine } from "../../SessionEngine";
import { Parameter } from "../Parameter";
export declare class GumballParameter extends Parameter<string> implements IGumballParameter {
    #private;
    constructor(paramDef: ShapeDiverResponseParameter, sessionEngine: SessionEngine);
    get enableRotation(): boolean | undefined;
    get enableRotationAxes(): {
        x?: boolean;
        y?: boolean;
        z?: boolean;
    } | undefined;
    get enableScaling(): boolean | undefined;
    get enableScalingAxes(): {
        x?: boolean;
        y?: boolean;
        z?: boolean;
    } | undefined;
    get enableTranslation(): boolean | undefined;
    get enableTranslationAxes(): {
        x?: boolean;
        y?: boolean;
        z?: boolean;
    } | undefined;
    get hover(): boolean | undefined;
    get interactionType(): InteractionParameterSettingsType;
    get nameFilter(): string[] | undefined;
    get scale(): number | undefined;
    get selectionColor(): string | undefined;
    get space(): "local" | "world" | undefined;
    private getGumballProperties;
}
//# sourceMappingURL=GumballParameter.d.ts.map