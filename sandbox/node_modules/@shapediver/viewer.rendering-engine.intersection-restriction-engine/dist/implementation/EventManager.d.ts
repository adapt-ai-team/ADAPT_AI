import { IViewportApi } from "@shapediver/viewer";
import { IDomEventListener } from "@shapediver/viewer.shared.services";
import { IRay } from "@shapediver/viewer.shared.types";
declare type Callbacks = {
    onDown: (event: PointerEvent, ray: IRay) => void;
    onMove: (event: PointerEvent, ray: IRay) => void;
    onUp: (event: PointerEvent, ray: IRay) => void;
    onOut: (event: PointerEvent, ray: IRay) => void;
    onKeyDown: (event: KeyboardEvent) => void;
    onKeyUp: (event: KeyboardEvent) => void;
};
export declare class EventManager implements IDomEventListener {
    #private;
    constructor(viewport: IViewportApi, callbacks: Callbacks);
    close(): void;
    onKeyDown(event: KeyboardEvent): void;
    onKeyUp(event: KeyboardEvent): void;
    onMouseWheel(): void;
    onPointerDown(event: PointerEvent): void;
    onPointerEnd(): void;
    onPointerMove(event: PointerEvent): void;
    onPointerOut(event: PointerEvent): void;
    onPointerUp(event: PointerEvent): void;
}
export {};
//# sourceMappingURL=EventManager.d.ts.map