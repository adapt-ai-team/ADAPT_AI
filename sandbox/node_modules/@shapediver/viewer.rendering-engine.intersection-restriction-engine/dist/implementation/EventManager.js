"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _EventManager_callbacks, _EventManager_canvasEventListenerToken, _EventManager_viewport;
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventManager = void 0;
// #endregion Type aliases (1)
// #region Classes (1)
class EventManager {
    // #endregion Properties (3)
    // #region Constructors (1)
    constructor(viewport, callbacks) {
        // #region Properties (3)
        _EventManager_callbacks.set(this, void 0);
        _EventManager_canvasEventListenerToken.set(this, void 0);
        _EventManager_viewport.set(this, void 0);
        __classPrivateFieldSet(this, _EventManager_viewport, viewport, "f");
        __classPrivateFieldSet(this, _EventManager_callbacks, callbacks, "f");
        __classPrivateFieldSet(this, _EventManager_canvasEventListenerToken, __classPrivateFieldGet(this, _EventManager_viewport, "f").addCanvasEventListener(this), "f");
    }
    // #endregion Constructors (1)
    // #region Public Methods (9)
    close() {
        __classPrivateFieldGet(this, _EventManager_viewport, "f").removeCanvasEventListener(__classPrivateFieldGet(this, _EventManager_canvasEventListenerToken, "f"));
    }
    onKeyDown(event) {
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onKeyDown(event);
    }
    onKeyUp(event) {
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onKeyUp(event);
    }
    onMouseWheel() { }
    onPointerDown(event) {
        const ray = __classPrivateFieldGet(this, _EventManager_viewport, "f").pointerEventToRay(event);
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onDown(event, ray);
    }
    onPointerEnd() { }
    onPointerMove(event) {
        const ray = __classPrivateFieldGet(this, _EventManager_viewport, "f").pointerEventToRay(event);
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onMove(event, ray);
    }
    onPointerOut(event) {
        const ray = __classPrivateFieldGet(this, _EventManager_viewport, "f").pointerEventToRay(event);
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onOut(event, ray);
    }
    onPointerUp(event) {
        const ray = __classPrivateFieldGet(this, _EventManager_viewport, "f").pointerEventToRay(event);
        __classPrivateFieldGet(this, _EventManager_callbacks, "f").onUp(event, ray);
    }
}
exports.EventManager = EventManager;
_EventManager_callbacks = new WeakMap(), _EventManager_canvasEventListenerToken = new WeakMap(), _EventManager_viewport = new WeakMap();
// #endregion Classes (1)
//# sourceMappingURL=EventManager.js.map