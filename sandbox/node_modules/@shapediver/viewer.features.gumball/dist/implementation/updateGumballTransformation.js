"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateGumballTransformation = void 0;
/**
 * Update the gumball transformation of a node.
 *
 * If a transformation is provided, the gumball transformation is updated.
 * If no transformation is provided, the gumball transformation is removed.
 *
 * @param node The node to update the gumball transformation of.
 * @param transformation The transformation to apply to the gumball.
 */
const updateGumballTransformation = (node, transformation) => {
    if (transformation) {
        const transformIndex = node.transformations.findIndex(t => t.id === 'SD_gumball_matrix');
        if (transformIndex !== -1) {
            node.transformations[transformIndex].matrix = transformation;
            node.updateVersion();
        }
        else {
            node.transformations.push({
                id: 'SD_gumball_matrix',
                matrix: transformation
            });
            node.updateVersion();
        }
    }
    else {
        const transformIndex = node.transformations.findIndex(t => t.id === 'SD_gumball_matrix');
        if (transformIndex !== -1) {
            node.transformations.splice(transformIndex, 1);
            node.updateVersion();
        }
    }
};
exports.updateGumballTransformation = updateGumballTransformation;
//# sourceMappingURL=updateGumballTransformation.js.map