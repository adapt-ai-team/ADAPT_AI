import { ShapeDiverResponseOutputContent } from "@shapediver/sdk.geometry-api-sdk-v2";
import { ITreeNode } from "@shapediver/viewer.shared.node-tree";
export declare class GlobalAccessObjects {
    #private;
    private static _instance;
    static get instance(): GlobalAccessObjects;
    get combineTextures(): ((red?: HTMLImageElement | ArrayBuffer, green?: HTMLImageElement | ArrayBuffer, blue?: HTMLImageElement | ArrayBuffer) => Promise<{
        image: HTMLImageElement | ArrayBuffer;
        blob: Blob;
    }>) | undefined;
    set combineTextures(value: ((red?: HTMLImageElement | ArrayBuffer, green?: HTMLImageElement | ArrayBuffer, blue?: HTMLImageElement | ArrayBuffer) => Promise<{
        image: HTMLImageElement | ArrayBuffer;
        blob: Blob;
    }>) | undefined);
    get loadContent(): ((content: ShapeDiverResponseOutputContent, jwtToken?: string, taskEventId?: string) => Promise<ITreeNode>) | undefined;
    set loadContent(value: ((content: ShapeDiverResponseOutputContent, jwtToken?: string, taskEventId?: string) => Promise<ITreeNode>) | undefined);
}
//# sourceMappingURL=GlobalAccessObjects.d.ts.map