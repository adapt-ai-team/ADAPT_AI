import { ISdtfAccessor, ISdtfAsset, ISdtfAttributes, ISdtfBuffer, ISdtfBufferView, ISdtfChunk, ISdtfDataItem, ISdtfFileInfo, ISdtfNode, ISdtfTypeHint } from '@shapediver/sdk.sdtf-core';
export interface ISdtfComponentFactory {
    readonly propertyNameAccessors: string;
    readonly propertyNameAttributes: string;
    readonly propertyNameBufferViews: string;
    readonly propertyNameBuffers: string;
    readonly propertyNameChunks: string;
    readonly propertyNameDataItems: string;
    readonly propertyNameFileInfo: string;
    readonly propertyNameNodes: string;
    readonly propertyNameTypeHints: string;
    createAccessor(accessorData: Record<string, unknown>): Partial<ISdtfAccessor>;
    createAsset(assetData: Record<string, unknown>): Partial<ISdtfAsset>;
    createAttributes(attributesData: Record<string, unknown>): Partial<ISdtfAttributes>;
    createBuffer(bufferData: Record<string, unknown>): Partial<ISdtfBuffer>;
    createBufferView(bufferViewData: Record<string, unknown>): Partial<ISdtfBufferView>;
    createChunk(chunkData: Record<string, unknown>): Partial<ISdtfChunk>;
    createDataItem(dataItemData: Record<string, unknown>): Partial<ISdtfDataItem>;
    createFileInfo(fileInfoData: Record<string, unknown>): Partial<ISdtfFileInfo>;
    createNode(nodeData: Record<string, unknown>): Partial<ISdtfNode>;
    createTypeHint(typeHintData: Record<string, unknown>): Partial<ISdtfTypeHint>;
}
//# sourceMappingURL=ISdtfComponentFactory.d.ts.map