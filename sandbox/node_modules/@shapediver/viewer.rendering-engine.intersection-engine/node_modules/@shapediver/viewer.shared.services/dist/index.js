"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isViewerDataProcessingError = exports.isViewerUnknownError = exports.isViewerError = exports.ShapeDiverGeometryBackendResponseErrorType = exports.ShapeDiverGeometryBackendResponseError = exports.ShapeDiverGeometryBackendRequestError = exports.ShapeDiverGeometryBackendError = exports.ShapeDiverViewerDrawingToolsError = exports.ShapeDiverViewerInteractionError = exports.ShapeDiverViewerValidationError = exports.ShapeDiverViewerCameraError = exports.ShapeDiverViewerLightError = exports.ShapeDiverViewerArError = exports.ShapeDiverViewerUnknownError = exports.ShapeDiverViewerViewportError = exports.ShapeDiverViewerCustomizationError = exports.ShapeDiverViewerSessionError = exports.ShapeDiverViewerSettingsError = exports.ShapeDiverViewerWebGLError = exports.ShapeDiverViewerEnvironmentMapError = exports.ShapeDiverViewerDataProcessingError = exports.ShapeDiverViewerError = exports.ShapeDiverViewerErrorType = exports.LOGGING_LEVEL = exports.Logger = exports.InputValidator = exports.TypeChecker = exports.Converter = exports.UuidGenerator = exports.HttpClient = exports.DomEventEngine = exports.SystemInfo = exports.StatePromise = exports.StateEngine = exports.defaultSettings = exports.SESSION_SETTINGS_MODE = exports.SettingsEngine = exports.EVENTTYPE_TASK = exports.EVENTTYPE_DRAWING_TOOLS = exports.EVENTTYPE_GUMBALL = exports.EVENTTYPE_INTERACTION = exports.EVENTTYPE_VIEWPORT = exports.EVENTTYPE_SESSION = exports.EVENTTYPE_SCENE = exports.EVENTTYPE_RENDERING = exports.EVENTTYPE_PARAMETER = exports.EVENTTYPE_OUTPUT = exports.EVENTTYPE_CAMERA = exports.EVENTTYPE = exports.EventEngine = void 0;
exports.stringify = exports.isValid = exports.numberCleaner = exports.btoaCustom = exports.atobCustom = exports.PerformanceEvaluator = exports.isViewerGeometryBackendResponseError = exports.isViewerGeometryBackendRequestError = exports.isViewerGeometryBackendGenericError = exports.isViewerGeometryBackendError = exports.isViewerDrawingToolsError = exports.isViewerInteractionError = exports.isViewerValidationError = exports.isARError = exports.isViewerCameraError = exports.isViewerLightError = exports.isViewerViewportError = exports.isViewerCustomizationError = exports.isViewerSessionError = exports.isViewerSettingsError = exports.isViewerWebGLError = exports.isViewerEnvironmentMapError = void 0;
const sdk_geometry_api_sdk_v2_1 = require("@shapediver/sdk.geometry-api-sdk-v2");
Object.defineProperty(exports, "ShapeDiverGeometryBackendResponseErrorType", { enumerable: true, get: function () { return sdk_geometry_api_sdk_v2_1.ShapeDiverResponseErrorType; } });
const Converter_1 = require("./converter/Converter");
Object.defineProperty(exports, "Converter", { enumerable: true, get: function () { return Converter_1.Converter; } });
const DomEventEngine_1 = require("./dom-event-engine/DomEventEngine");
Object.defineProperty(exports, "DomEventEngine", { enumerable: true, get: function () { return DomEventEngine_1.DomEventEngine; } });
const EventEngine_1 = require("./event-engine/EventEngine");
Object.defineProperty(exports, "EventEngine", { enumerable: true, get: function () { return EventEngine_1.EventEngine; } });
const EventTypes_1 = require("./event-engine/EventTypes");
Object.defineProperty(exports, "EVENTTYPE", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE; } });
Object.defineProperty(exports, "EVENTTYPE_CAMERA", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_CAMERA; } });
Object.defineProperty(exports, "EVENTTYPE_DRAWING_TOOLS", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_DRAWING_TOOLS; } });
Object.defineProperty(exports, "EVENTTYPE_GUMBALL", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_GUMBALL; } });
Object.defineProperty(exports, "EVENTTYPE_INTERACTION", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_INTERACTION; } });
Object.defineProperty(exports, "EVENTTYPE_OUTPUT", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_OUTPUT; } });
Object.defineProperty(exports, "EVENTTYPE_PARAMETER", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_PARAMETER; } });
Object.defineProperty(exports, "EVENTTYPE_RENDERING", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_RENDERING; } });
Object.defineProperty(exports, "EVENTTYPE_SCENE", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_SCENE; } });
Object.defineProperty(exports, "EVENTTYPE_SESSION", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_SESSION; } });
Object.defineProperty(exports, "EVENTTYPE_TASK", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_TASK; } });
Object.defineProperty(exports, "EVENTTYPE_VIEWPORT", { enumerable: true, get: function () { return EventTypes_1.EVENTTYPE_VIEWPORT; } });
const HttpClient_1 = require("./http-client/HttpClient");
Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function () { return HttpClient_1.HttpClient; } });
const InputValidator_1 = require("./input-validator/InputValidator");
Object.defineProperty(exports, "InputValidator", { enumerable: true, get: function () { return InputValidator_1.InputValidator; } });
const ErrorTypeGuards_1 = require("./logger/ErrorTypeGuards");
Object.defineProperty(exports, "isARError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isARError; } });
Object.defineProperty(exports, "isViewerCameraError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerCameraError; } });
Object.defineProperty(exports, "isViewerCustomizationError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerCustomizationError; } });
Object.defineProperty(exports, "isViewerDataProcessingError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerDataProcessingError; } });
Object.defineProperty(exports, "isViewerDrawingToolsError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerDrawingToolsError; } });
Object.defineProperty(exports, "isViewerEnvironmentMapError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerEnvironmentMapError; } });
Object.defineProperty(exports, "isViewerError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerError; } });
Object.defineProperty(exports, "isViewerGeometryBackendError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerGeometryBackendError; } });
Object.defineProperty(exports, "isViewerGeometryBackendGenericError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerGeometryBackendGenericError; } });
Object.defineProperty(exports, "isViewerGeometryBackendRequestError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerGeometryBackendRequestError; } });
Object.defineProperty(exports, "isViewerGeometryBackendResponseError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerGeometryBackendResponseError; } });
Object.defineProperty(exports, "isViewerInteractionError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerInteractionError; } });
Object.defineProperty(exports, "isViewerLightError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerLightError; } });
Object.defineProperty(exports, "isViewerSessionError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerSessionError; } });
Object.defineProperty(exports, "isViewerSettingsError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerSettingsError; } });
Object.defineProperty(exports, "isViewerUnknownError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerUnknownError; } });
Object.defineProperty(exports, "isViewerValidationError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerValidationError; } });
Object.defineProperty(exports, "isViewerViewportError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerViewportError; } });
Object.defineProperty(exports, "isViewerWebGLError", { enumerable: true, get: function () { return ErrorTypeGuards_1.isViewerWebGLError; } });
const Logger_1 = require("./logger/Logger");
Object.defineProperty(exports, "Logger", { enumerable: true, get: function () { return Logger_1.Logger; } });
Object.defineProperty(exports, "LOGGING_LEVEL", { enumerable: true, get: function () { return Logger_1.LOGGING_LEVEL; } });
const ShapeDiverBackendErrors_1 = require("./logger/ShapeDiverBackendErrors");
Object.defineProperty(exports, "ShapeDiverGeometryBackendError", { enumerable: true, get: function () { return ShapeDiverBackendErrors_1.ShapeDiverGeometryBackendError; } });
Object.defineProperty(exports, "ShapeDiverGeometryBackendRequestError", { enumerable: true, get: function () { return ShapeDiverBackendErrors_1.ShapeDiverGeometryBackendRequestError; } });
Object.defineProperty(exports, "ShapeDiverGeometryBackendResponseError", { enumerable: true, get: function () { return ShapeDiverBackendErrors_1.ShapeDiverGeometryBackendResponseError; } });
const ShapeDiverError_1 = require("./logger/ShapeDiverError");
Object.defineProperty(exports, "ShapeDiverViewerError", { enumerable: true, get: function () { return ShapeDiverError_1.ShapeDiverViewerError; } });
Object.defineProperty(exports, "ShapeDiverViewerErrorType", { enumerable: true, get: function () { return ShapeDiverError_1.ShapeDiverViewerErrorType; } });
const ShapeDiverViewerErrors_1 = require("./logger/ShapeDiverViewerErrors");
Object.defineProperty(exports, "ShapeDiverViewerArError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerArError; } });
Object.defineProperty(exports, "ShapeDiverViewerCameraError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerCameraError; } });
Object.defineProperty(exports, "ShapeDiverViewerCustomizationError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerCustomizationError; } });
Object.defineProperty(exports, "ShapeDiverViewerDataProcessingError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerDataProcessingError; } });
Object.defineProperty(exports, "ShapeDiverViewerDrawingToolsError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerDrawingToolsError; } });
Object.defineProperty(exports, "ShapeDiverViewerEnvironmentMapError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerEnvironmentMapError; } });
Object.defineProperty(exports, "ShapeDiverViewerInteractionError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerInteractionError; } });
Object.defineProperty(exports, "ShapeDiverViewerLightError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerLightError; } });
Object.defineProperty(exports, "ShapeDiverViewerSessionError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerSessionError; } });
Object.defineProperty(exports, "ShapeDiverViewerSettingsError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerSettingsError; } });
Object.defineProperty(exports, "ShapeDiverViewerUnknownError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerUnknownError; } });
Object.defineProperty(exports, "ShapeDiverViewerValidationError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerValidationError; } });
Object.defineProperty(exports, "ShapeDiverViewerViewportError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerViewportError; } });
Object.defineProperty(exports, "ShapeDiverViewerWebGLError", { enumerable: true, get: function () { return ShapeDiverViewerErrors_1.ShapeDiverViewerWebGLError; } });
const ParameterUtils_1 = require("./parameter-utils/ParameterUtils");
Object.defineProperty(exports, "isValid", { enumerable: true, get: function () { return ParameterUtils_1.isValid; } });
Object.defineProperty(exports, "stringify", { enumerable: true, get: function () { return ParameterUtils_1.stringify; } });
const PerformanceEvaluator_1 = require("./performance-evaluator/PerformanceEvaluator");
Object.defineProperty(exports, "PerformanceEvaluator", { enumerable: true, get: function () { return PerformanceEvaluator_1.PerformanceEvaluator; } });
const SettingsEngine_1 = require("./settings-engine/SettingsEngine");
Object.defineProperty(exports, "defaultSettings", { enumerable: true, get: function () { return SettingsEngine_1.defaultSettings; } });
Object.defineProperty(exports, "SESSION_SETTINGS_MODE", { enumerable: true, get: function () { return SettingsEngine_1.SESSION_SETTINGS_MODE; } });
Object.defineProperty(exports, "SettingsEngine", { enumerable: true, get: function () { return SettingsEngine_1.SettingsEngine; } });
const StateEngine_1 = require("./state-engine/StateEngine");
Object.defineProperty(exports, "StateEngine", { enumerable: true, get: function () { return StateEngine_1.StateEngine; } });
const StatePromise_1 = require("./state-engine/StatePromise");
Object.defineProperty(exports, "StatePromise", { enumerable: true, get: function () { return StatePromise_1.StatePromise; } });
const SystemInfo_1 = require("./system-info/SystemInfo");
Object.defineProperty(exports, "SystemInfo", { enumerable: true, get: function () { return SystemInfo_1.SystemInfo; } });
const TypeChecker_1 = require("./type-check/TypeChecker");
Object.defineProperty(exports, "TypeChecker", { enumerable: true, get: function () { return TypeChecker_1.TypeChecker; } });
const base64_1 = require("./utilities/base64");
Object.defineProperty(exports, "atobCustom", { enumerable: true, get: function () { return base64_1.atobCustom; } });
Object.defineProperty(exports, "btoaCustom", { enumerable: true, get: function () { return base64_1.btoaCustom; } });
const numberCleaner_1 = require("./utilities/numberCleaner");
Object.defineProperty(exports, "numberCleaner", { enumerable: true, get: function () { return numberCleaner_1.numberCleaner; } });
const UuidGenerator_1 = require("./uuid-generator/UuidGenerator");
Object.defineProperty(exports, "UuidGenerator", { enumerable: true, get: function () { return UuidGenerator_1.UuidGenerator; } });
//# sourceMappingURL=index.js.map