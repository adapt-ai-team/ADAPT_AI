export declare const ShapeDiverErrorType: {
    readonly Generic: "sd_gb_sdk_generic";
    readonly Request: "sd_gb_sdk_request";
    readonly Response: "sd_gb_sdk_response";
};
export type ShapeDiverErrorType = (typeof ShapeDiverErrorType)[keyof typeof ShapeDiverErrorType];
export declare class ShapeDiverError extends Error {
    readonly errorType: ShapeDiverErrorType;
    constructor(message: string);
}
export declare class ShapeDiverRequestError extends ShapeDiverError {
    readonly desc: string;
    readonly errorType: ShapeDiverErrorType;
    constructor(desc: string, message: string);
}
export declare class ShapeDiverResponseError extends ShapeDiverError {
    readonly status: number;
    readonly error: string;
    readonly desc: string;
    readonly headers: {
        [key: string]: any;
    };
    readonly errorType: ShapeDiverErrorType;
    constructor(message: string, status: number, error: string, desc: string, headers: {
        [key: string]: any;
    });
}
//# sourceMappingURL=ShapeDiverErrors.d.ts.map