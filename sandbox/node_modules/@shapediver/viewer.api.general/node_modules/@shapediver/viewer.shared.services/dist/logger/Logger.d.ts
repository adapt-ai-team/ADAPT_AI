export declare enum LOGGING_LEVEL {
    NONE = "none",
    ERROR = "error",
    FATAL = "fatal",
    WARN = "warn",
    INFO = "info",
    DEBUG = "debug",
    DEBUG_HIGH = "debug_high",
    DEBUG_MEDIUM = "debug_medium",
    DEBUG_LOW = "debug_low"
}
export declare class Logger {
    private static _instance;
    private _loggingLevel;
    private _showMessages;
    static get instance(): Logger;
    get loggingLevel(): LOGGING_LEVEL;
    set loggingLevel(value: LOGGING_LEVEL);
    get showMessages(): boolean;
    set showMessages(value: boolean);
    /**
     * Logging a debug message.
     * @param msg the message
     */
    debug(msg: string): void;
    /**
     * Logging a debug message with high priority.
     * @param msg the message
     */
    debugHigh(msg: string): void;
    /**
     * Logging a debug message with low priority.
     * @param msg the message
     */
    debugLow(msg: string): void;
    /**
     * Logging a debug message with medium priority.
     * @param msg the message
     */
    debugMedium(msg: string): void;
    /**
     * Logging an error.
     * @param msg the message
     */
    error(msg: string): void;
    /**
     * Logging a fatal error.
     * @param msg the message
     */
    fatal(msg: string): void;
    /**
     * Logging an info.
     * @param msg the message
     */
    info(msg: string): void;
    /**
     * Logging a warning.
     * @param msg the message
     */
    warn(msg: string): void;
    private canLog;
    private messageConstruction;
}
//# sourceMappingURL=Logger.d.ts.map