import { ICameraControls } from "../../interfaces/controls/ICameraControls";
import { ICameraControlsEventDistribution } from "../../interfaces/controls/ICameraControlsEventDistribution";
import { ICameraControlsLogic } from "../../interfaces/controls/ICameraControlsLogic";
export declare class CameraControlsEventDistribution implements ICameraControlsEventDistribution {
    private _zoomResizeTimeout;
    protected _active: {
        rotation: boolean;
        zoom: boolean;
        pan: boolean;
    };
    protected _activeEvents: boolean;
    protected _cameraLogic: ICameraControlsLogic;
    protected _controls: ICameraControls;
    protected _primaryPointerEvent?: PointerEvent;
    protected _secondaryPointerEvent?: PointerEvent;
    constructor(controls: ICameraControls, cameraLogic: ICameraControlsLogic);
    activateCameraEvents(): void;
    deactivateCameraEvents(): void;
    onDown(event: PointerEvent): void;
    onKey(event: KeyboardEvent): void;
    onKeyDown(event: KeyboardEvent): void;
    onKeyUp(event: KeyboardEvent): void;
    onMouseWheel(event: WheelEvent): void;
    onMove(event: PointerEvent): void;
    onPointerDown(event: PointerEvent): void;
    onPointerEnd(event: PointerEvent): void;
    onPointerMove(event: PointerEvent): void;
    onPointerOut(event: PointerEvent): void;
    onPointerUp(event: PointerEvent): void;
    onUp(event: PointerEvent): void;
    onWheel(event: WheelEvent): void;
    reset(): void;
    protected convertInput(event: PointerEvent): {
        x: number;
        y: number;
    };
    protected getInput(event: PointerEvent): number;
    private revert;
}
//# sourceMappingURL=CameraControlsEventDistribution.d.ts.map