import { MapData } from './MapData';
import { AbstractMaterialData, AbstractMaterialDataProperties } from './AbstractMaterialData';
export interface MaterialSpecularGlossinessDataProperties extends AbstractMaterialDataProperties {
    glossiness?: number;
    glossinessMap?: MapData;
    specular?: string;
    specularGlossinessMap?: MapData;
    specularMap?: MapData;
}
export declare class MaterialSpecularGlossinessData extends AbstractMaterialData {
    #private;
    /**
     * Creates a material data object.
     *
     * @param _attributes the attributes of the material
     * @param id the id
     */
    constructor(properties?: MaterialSpecularGlossinessDataProperties, id?: string);
    get glossiness(): number;
    set glossiness(value: number);
    get glossinessMap(): MapData | undefined;
    set glossinessMap(value: MapData | undefined);
    get specular(): string;
    set specular(value: string);
    get specularGlossinessMap(): MapData | undefined;
    set specularGlossinessMap(value: MapData | undefined);
    get specularMap(): MapData | undefined;
    set specularMap(value: MapData | undefined);
    reset(): void;
    clone(): MaterialSpecularGlossinessData;
    copy(source: MaterialSpecularGlossinessData): void;
}
//# sourceMappingURL=MaterialSpecularGlossinessData.d.ts.map