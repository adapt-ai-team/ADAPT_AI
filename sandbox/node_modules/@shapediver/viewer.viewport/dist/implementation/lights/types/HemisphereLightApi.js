"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _HemisphereLightApi_inputValidator, _HemisphereLightApi_light, _HemisphereLightApi_logger, _HemisphereLightApi_viewportApi;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HemisphereLightApi = void 0;
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const AbstractLightApi_1 = require("../AbstractLightApi");
class HemisphereLightApi extends AbstractLightApi_1.AbstractLightApi {
    // #endregion Properties (4)
    // #region Constructors (1)
    constructor(viewportApi, light) {
        super(viewportApi, light);
        // #region Properties (4)
        _HemisphereLightApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);
        _HemisphereLightApi_light.set(this, void 0);
        _HemisphereLightApi_logger.set(this, viewer_shared_services_1.Logger.instance);
        _HemisphereLightApi_viewportApi.set(this, void 0);
        __classPrivateFieldSet(this, _HemisphereLightApi_viewportApi, viewportApi, "f");
        __classPrivateFieldSet(this, _HemisphereLightApi_light, light, "f");
        this.scope = "HemisphereLightApi";
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (2)
    get groundColor() {
        return __classPrivateFieldGet(this, _HemisphereLightApi_light, "f").groundColor;
    }
    set groundColor(value) {
        const scope = "groundColor";
        __classPrivateFieldGet(this, _HemisphereLightApi_inputValidator, "f").validateAndError(`${this.scope}.${scope}`, value, "color");
        __classPrivateFieldGet(this, _HemisphereLightApi_light, "f").groundColor = value;
        __classPrivateFieldGet(this, _HemisphereLightApi_logger, "f").debug(`${this.scope}.${scope}: ${scope} was set to: ${value}`);
        __classPrivateFieldGet(this, _HemisphereLightApi_viewportApi, "f").update();
    }
}
exports.HemisphereLightApi = HemisphereLightApi;
_HemisphereLightApi_inputValidator = new WeakMap(), _HemisphereLightApi_light = new WeakMap(), _HemisphereLightApi_logger = new WeakMap(), _HemisphereLightApi_viewportApi = new WeakMap();
//# sourceMappingURL=HemisphereLightApi.js.map