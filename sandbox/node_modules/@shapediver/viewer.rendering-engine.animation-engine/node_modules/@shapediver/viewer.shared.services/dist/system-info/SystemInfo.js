"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemInfo = void 0;
const ua_parser_js_1 = __importDefault(require("ua-parser-js"));
class SystemInfo {
    // #endregion Properties (5)
    // #region Constructors (1)
    constructor() {
        this._parser = new ua_parser_js_1.default();
        const isInternetExplorer = typeof window !== "undefined" &&
            window.navigator &&
            window.navigator.userAgent.indexOf("Trident") > -1;
        this._isBrowser =
            isInternetExplorer ||
                (typeof document !== "undefined" &&
                    typeof document.getElementById === "function" &&
                    window &&
                    typeof window.Event === "function");
        this._isIframe = false;
        if (this._isBrowser) {
            // in case we are running in an iframe, parent and window are different, in
            // that case we use the referrer
            this._isIframe = parent !== window;
            this._origin = this._isIframe
                ? document.referrer
                : window.location.origin;
        }
        else {
            this._origin = "direct";
        }
    }
    // #endregion Constructors (1)
    // #region Public Static Accessors (1)
    static get instance() {
        return this._instance || (this._instance = new this());
    }
    // #endregion Public Static Accessors (1)
    // #region Public Accessors (11)
    /**
     * Check if we are on an Android device
     */
    get isAndroid() {
        const osName = this._parser.getOS().name;
        return osName === "Android";
    }
    /**
     * Check if we are running in a browser
     */
    get isBrowser() {
        return this._isBrowser;
    }
    /**
     * Check if we are running in Safari
     */
    get isChrome() {
        const browserName = this._parser.getBrowser().name;
        return !!(browserName && browserName.includes("Chrome"));
    }
    /**
     * Check if we are running in Firefox
     */
    get isFirefox() {
        const browserName = this._parser.getBrowser().name;
        return !!(browserName && browserName.includes("Firefox"));
    }
    /**
     * Check if we are running in internet explorer (arrrggghhhh!!!!)
     */
    get isIE() {
        const browserName = this._parser.getBrowser().name;
        return !!(browserName && browserName.includes("IE"));
    }
    /**
     * Check if we are on an IOS device
     */
    get isIOS() {
        const osName = this._parser.getOS().name;
        return (osName === "iOS" ||
            (typeof window !== undefined &&
                window.navigator &&
                window.navigator.maxTouchPoints === 5 &&
                window.navigator.platform === "MacIntel"));
    }
    /**
     * Check if we are running in an iframe
     */
    get isIframe() {
        return this._isIframe;
    }
    /**
     * Check if we are running in an instagram browser
     */
    get isInstagram() {
        return this._parser.getBrowser().name === "Instagram";
    }
    /**
     * Check if we are on a Mac OS device
     */
    get isMacOS() {
        const osName = this._parser.getOS().name;
        return osName === "Mac OS";
    }
    /**
     * Check if we are on a mobile device
     */
    get isMobile() {
        const type = this._parser.getDevice().type;
        return type === "mobile" || type === "tablet";
    }
    /**
     * Check if we are running in Safari
     */
    get isSafari() {
        const browserName = this._parser.getBrowser().name;
        return !!(browserName && browserName.includes("Safari"));
    }
    /**
     * Get guessed origin of embedding website
     */
    get origin() {
        return this._origin + "";
    }
}
exports.SystemInfo = SystemInfo;
//# sourceMappingURL=SystemInfo.js.map