"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertToPrevious = exports.convertFromPrevious = void 0;
const Defaults_1 = require("../v3_1/Defaults");
const Defaults_2 = require("./Defaults");
const convertFromPrevious = (s, v) => {
    const settings = Defaults_2.Defaults();
    const oldSettings = s;
    /**
     * SETTINGS OBJECTS THAT DID NOT CHANGE
     */
    settings.ar = oldSettings.ar;
    settings.build_date = oldSettings.build_date;
    settings.build_version = oldSettings.build_version;
    settings.camera = oldSettings.camera;
    settings.general = oldSettings.general;
    settings.light = oldSettings.light;
    settings.session = oldSettings.session;
    /**
     * SETTINGS OBJECTS THAT DID CHANGE
     */
    settings.environment.clearAlpha = oldSettings.environment.clearAlpha;
    settings.environment.clearColor = oldSettings.environment.clearColor;
    settings.environment.map = oldSettings.environment.map;
    settings.environment.mapAsBackground = oldSettings.environment.mapAsBackground;
    settings.environment.mapResolution = oldSettings.environment.mapResolution;
    settings.environmentGeometry.gridColor = oldSettings.environmentGeometry.gridColor;
    settings.environmentGeometry.gridVisibility = oldSettings.environmentGeometry.gridVisibility;
    settings.environmentGeometry.groundPlaneColor = oldSettings.environmentGeometry.groundPlaneColor;
    settings.environmentGeometry.groundPlaneVisibility = oldSettings.environmentGeometry.groundPlaneVisibility;
    settings.rendering.ambientOcclusion = oldSettings.rendering.ambientOcclusion;
    settings.rendering.ambientOcclusionIntensity = oldSettings.rendering.ambientOcclusionIntensity;
    settings.rendering.beautyRenderBlendingDuration = oldSettings.rendering.beautyRenderBlendingDuration;
    settings.rendering.beautyRenderDelay = oldSettings.rendering.beautyRenderDelay;
    settings.rendering.outputEncoding = oldSettings.rendering.outputEncoding;
    settings.rendering.physicallyCorrectLights = oldSettings.rendering.physicallyCorrectLights;
    settings.rendering.shadows = oldSettings.rendering.shadows;
    settings.rendering.textureEncoding = oldSettings.rendering.textureEncoding;
    settings.rendering.toneMapping = oldSettings.rendering.toneMapping;
    settings.rendering.toneMappingExposure = oldSettings.rendering.toneMappingExposure;
    return settings;
};
exports.convertFromPrevious = convertFromPrevious;
const convertToPrevious = (s, v) => {
    const settings = Defaults_1.Defaults();
    const newSettings = s;
    /**
     * SETTINGS OBJECTS THAT DID NOT CHANGE
     */
    settings.ar = newSettings.ar;
    settings.build_date = newSettings.build_date;
    settings.build_version = newSettings.build_version;
    settings.camera = newSettings.camera;
    settings.general = newSettings.general;
    settings.light = newSettings.light;
    settings.session = newSettings.session;
    /**
     * SETTINGS OBJECTS THAT DID CHANGE
     */
    settings.environment.clearAlpha = newSettings.environment.clearAlpha;
    settings.environment.clearColor = newSettings.environment.clearColor;
    settings.environment.map = newSettings.environment.map;
    settings.environment.mapAsBackground = newSettings.environment.mapAsBackground;
    settings.environment.mapResolution = newSettings.environment.mapResolution;
    settings.environmentGeometry.gridColor = newSettings.environmentGeometry.gridColor;
    settings.environmentGeometry.gridVisibility = newSettings.environmentGeometry.gridVisibility;
    settings.environmentGeometry.groundPlaneColor = newSettings.environmentGeometry.groundPlaneColor;
    settings.environmentGeometry.groundPlaneVisibility = newSettings.environmentGeometry.groundPlaneVisibility;
    settings.rendering.ambientOcclusion = newSettings.rendering.ambientOcclusion;
    settings.rendering.ambientOcclusionIntensity = newSettings.rendering.ambientOcclusionIntensity;
    settings.rendering.beautyRenderBlendingDuration = newSettings.rendering.beautyRenderBlendingDuration;
    settings.rendering.beautyRenderDelay = newSettings.rendering.beautyRenderDelay;
    settings.rendering.outputEncoding = newSettings.rendering.outputEncoding;
    settings.rendering.physicallyCorrectLights = newSettings.rendering.physicallyCorrectLights;
    settings.rendering.shadows = newSettings.rendering.shadows;
    settings.rendering.textureEncoding = newSettings.rendering.textureEncoding;
    settings.rendering.toneMapping = newSettings.rendering.toneMapping;
    settings.rendering.toneMappingExposure = newSettings.rendering.toneMappingExposure;
    return settings;
};
exports.convertToPrevious = convertToPrevious;
//# sourceMappingURL=Converter.js.map