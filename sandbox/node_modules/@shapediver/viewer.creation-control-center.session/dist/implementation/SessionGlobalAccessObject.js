"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SessionGlobalAccessObject_sessionEngine, _SessionGlobalAccessObject_initialOutputsLoaded, _SessionGlobalAccessObject_initialized, _SessionGlobalAccessObject_isFirstSession, _SessionGlobalAccessObject_settingsRegistered;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionGlobalAccessObject = void 0;
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
class SessionGlobalAccessObject {
    // #endregion Properties (5)
    // #region Constructors (1)
    constructor(sessionEngine) {
        // #region Properties (5)
        _SessionGlobalAccessObject_sessionEngine.set(this, void 0);
        _SessionGlobalAccessObject_initialOutputsLoaded.set(this, new viewer_shared_services_1.StatePromise());
        _SessionGlobalAccessObject_initialized.set(this, new viewer_shared_services_1.StatePromise());
        _SessionGlobalAccessObject_isFirstSession.set(this, false);
        _SessionGlobalAccessObject_settingsRegistered.set(this, new viewer_shared_services_1.StatePromise());
        __classPrivateFieldSet(this, _SessionGlobalAccessObject_sessionEngine, sessionEngine, "f");
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (9)
    get canUploadGLTF() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_sessionEngine, "f").canUploadGLTF;
    }
    get id() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_sessionEngine, "f").id;
    }
    get initialOutputsLoaded() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_initialOutputsLoaded, "f");
    }
    get initialized() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_initialized, "f");
    }
    get isFirstSession() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_isFirstSession, "f");
    }
    set isFirstSession(value) {
        __classPrivateFieldSet(this, _SessionGlobalAccessObject_isFirstSession, value, "f");
    }
    get modelViewUrl() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_sessionEngine, "f").modelViewUrl;
    }
    get settingsEngine() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_sessionEngine, "f").settingsEngine;
    }
    get settingsRegistered() {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_settingsRegistered, "f");
    }
    // #endregion Public Getters And Setters (9)
    // #region Public Methods (1)
    uploadGLTF(gltf, name) {
        return __classPrivateFieldGet(this, _SessionGlobalAccessObject_sessionEngine, "f").uploadGLTF(gltf, name);
    }
}
exports.SessionGlobalAccessObject = SessionGlobalAccessObject;
_SessionGlobalAccessObject_sessionEngine = new WeakMap(), _SessionGlobalAccessObject_initialOutputsLoaded = new WeakMap(), _SessionGlobalAccessObject_initialized = new WeakMap(), _SessionGlobalAccessObject_isFirstSession = new WeakMap(), _SessionGlobalAccessObject_settingsRegistered = new WeakMap();
//# sourceMappingURL=SessionGlobalAccessObject.js.map