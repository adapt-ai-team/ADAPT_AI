import { ShapeDiverRequestGltfUploadQueryConversion, ShapeDiverResponseDto } from "@shapediver/sdk.geometry-api-sdk-v2";
import { SessionEngine } from "@shapediver/viewer.session-engine.session-engine";
import { ISessionGlobalAccessObjectDefinition, SettingsEngine, StatePromise } from "@shapediver/viewer.shared.services";
export declare class SessionGlobalAccessObject implements ISessionGlobalAccessObjectDefinition {
    #private;
    constructor(sessionEngine: SessionEngine);
    get canUploadGLTF(): boolean;
    get id(): string;
    get initialOutputsLoaded(): StatePromise<boolean>;
    get initialized(): StatePromise<boolean>;
    get isFirstSession(): boolean;
    set isFirstSession(value: boolean);
    get modelViewUrl(): string;
    get settingsEngine(): SettingsEngine;
    get settingsRegistered(): StatePromise<boolean>;
    uploadGLTF(gltf: Blob, name: ShapeDiverRequestGltfUploadQueryConversion | undefined): Promise<ShapeDiverResponseDto>;
}
//# sourceMappingURL=SessionGlobalAccessObject.d.ts.map