import { ISdtfParser, ISdtfReadableAsset } from '@shapediver/sdk.sdtf-core';
import { ISdtfBufferCache } from '../buffer_cache/ISdtfBufferCache';
import { SdtfConfig } from '../SdtfConfig';
import { ISdtfComponentList } from '../structure/ISdtfComponentList';
import { ISdtfReadableComponentFactory } from './ISdtfReadableComponentFactory';
export declare class SdtfParser implements ISdtfParser {
    private readonly config;
    private readonly binarySdtfParser;
    private readonly componentFactory;
    private readonly fileUtils;
    constructor(config: SdtfConfig);
    readFromFile(path: string): Promise<ISdtfReadableAsset>;
    readFromUrl(url: string): Promise<ISdtfReadableAsset>;
    readFromBuffer(sdtf: ArrayBuffer): ISdtfReadableAsset;
    createSdtfAsset(content: Record<string, unknown>, bufferCache: ISdtfBufferCache): ISdtfReadableAsset;
    buildReadableAsset(componentList: ISdtfComponentList, factory: ISdtfReadableComponentFactory): ISdtfReadableAsset;
}
//# sourceMappingURL=SdtfParser.d.ts.map