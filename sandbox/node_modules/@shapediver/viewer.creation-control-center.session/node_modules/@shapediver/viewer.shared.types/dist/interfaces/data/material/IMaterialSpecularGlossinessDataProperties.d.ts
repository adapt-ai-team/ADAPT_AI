import { Color } from "../../../types";
import { IMapData, IMapDataPropertiesDefinition } from "./IMapData";
import { IMaterialAbstractData, IMaterialAbstractDataPropertiesGeneric } from "./IMaterialAbstractData";
export declare type IMaterialSpecularGlossinessDataProperties = Partial<IMaterialSpecularGlossinessDataPropertiesGeneric<IMapData>>;
export declare type IMaterialSpecularGlossinessDataPropertiesDefinition = Partial<IMaterialSpecularGlossinessDataPropertiesGeneric<IMapDataPropertiesDefinition>>;
export interface IMaterialSpecularGlossinessData extends IMaterialSpecularGlossinessDataPropertiesGeneric<IMapData>, IMaterialAbstractData {
    clone(): IMaterialSpecularGlossinessData;
    copy(source: IMaterialSpecularGlossinessData): void;
}
interface IMaterialSpecularGlossinessDataPropertiesGeneric<T> extends IMaterialAbstractDataPropertiesGeneric<T> {
    envMap?: string | string[];
    glossiness?: number;
    glossinessMap?: T;
    specular?: Color;
    specularGlossinessMap?: T;
    specularMap?: T;
}
export {};
//# sourceMappingURL=IMaterialSpecularGlossinessDataProperties.d.ts.map