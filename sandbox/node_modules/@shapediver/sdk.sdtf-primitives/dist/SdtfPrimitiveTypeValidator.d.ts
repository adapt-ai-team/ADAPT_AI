import { ISdtfReadableAccessor, ISdtfWriteableAccessor, SdtfPrimitiveTypeHintName } from '@shapediver/sdk.sdtf-core';
import { SdtfPrimitiveColorType } from './ISdtfPrimitiveTypes';
export declare class SdtfPrimitiveTypeValidator {
    validateComponent(typeHint: SdtfPrimitiveTypeHintName, value?: unknown, accessor?: ISdtfReadableAccessor | ISdtfWriteableAccessor): boolean;
    static validateCharType(value: unknown): value is string;
    static validateColorType(value: unknown): value is SdtfPrimitiveColorType | string;
    static validateGuidType(value: unknown): value is string;
    static validateInt8Type(value: unknown): value is number;
    static validateInt16Type(value: unknown): value is number;
    static validateInt32Type(value: unknown): value is number;
    static validateInt64Type(value: unknown): value is number;
    static validateSingleType(value: unknown): value is number;
    static validateUint8Type(value: unknown): value is number;
    static validateUint16Type(value: unknown): value is number;
    static validateUint32Type(value: unknown): value is number;
    static validateUint64Type(value: unknown): value is number;
}
//# sourceMappingURL=SdtfPrimitiveTypeValidator.d.ts.map