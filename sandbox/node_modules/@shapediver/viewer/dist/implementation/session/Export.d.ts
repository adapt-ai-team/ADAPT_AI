import { ShapeDiverResponseExport, ShapeDiverResponseExportContent, ShapeDiverResponseExportDefinitionType, ShapeDiverResponseExportResult, ShapeDiverResponseModelComputationStatus, ShapeDiverResponseParameterGroup } from '@shapediver/sdk.geometry-api-sdk-v2';
import { Session } from '@shapediver/viewer.session-engine.session-engine';
import { IExport } from '../../interfaces/session/IExport';
import { ISession } from '../../interfaces/session/ISession';
export declare class Export implements IExport {
    #private;
    constructor(session: ISession, sessionEngine: Session, exportDef: ShapeDiverResponseExport);
    get content(): ShapeDiverResponseExportContent[] | undefined;
    get delay(): number | undefined;
    get dependency(): string[];
    get displayname(): string | undefined;
    set displayname(value: string | undefined);
    get filename(): string | undefined;
    get group(): ShapeDiverResponseParameterGroup | undefined;
    get hidden(): boolean;
    set hidden(value: boolean);
    get id(): string;
    get maxWaitTime(): number;
    set maxWaitTime(value: number);
    get msg(): string | undefined;
    get name(): string;
    get order(): number | undefined;
    set order(value: number | undefined);
    get result(): ShapeDiverResponseExportResult | undefined;
    get status_collect(): ShapeDiverResponseModelComputationStatus | undefined;
    get status_computation(): ShapeDiverResponseModelComputationStatus | undefined;
    get tooltip(): string | undefined;
    set tooltip(value: string | undefined);
    get type(): ShapeDiverResponseExportDefinitionType;
    get uid(): string | undefined;
    get version(): string | undefined;
    request(parameters?: {
        [key: string]: string;
    }): Promise<ShapeDiverResponseExport>;
    updateExport(): void;
    private updateExportDefinition;
}
//# sourceMappingURL=Export.d.ts.map