"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PerspectiveCamera_camera, _PerspectiveCamera_controls, _PerspectiveCamera_inputValidator, _PerspectiveCamera_logger, _PerspectiveCamera_viewer;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PerspectiveCamera = void 0;
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const tsyringe_1 = require("tsyringe");
const AbstractCamera_1 = require("./AbstractCamera");
const PerspectiveCameraControls_1 = require("./controls/PerspectiveCameraControls");
class PerspectiveCamera extends AbstractCamera_1.AbstractCamera {
    // #endregion Properties (5)
    // #region Constructors (1)
    /**
     * @ignore
     * @param camera
     */
    constructor(camera, viewer) {
        super(camera, viewer);
        // #region Properties (5)
        _PerspectiveCamera_camera.set(this, void 0);
        _PerspectiveCamera_controls.set(this, void 0);
        _PerspectiveCamera_inputValidator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.InputValidator));
        _PerspectiveCamera_logger.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Logger));
        _PerspectiveCamera_viewer.set(this, void 0);
        try {
            __classPrivateFieldSet(this, _PerspectiveCamera_camera, camera, "f");
            __classPrivateFieldSet(this, _PerspectiveCamera_viewer, viewer, "f");
            __classPrivateFieldSet(this, _PerspectiveCamera_controls, new PerspectiveCameraControls_1.PerspectiveCameraControls(camera.controls, viewer), "f");
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.ShapeDiverViewerError || e instanceof viewer_shared_services_1.ShapeDiverBackendError)
                throw e;
            throw __classPrivateFieldGet(this, _PerspectiveCamera_logger, "f").handleError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).constructor`, e);
        }
    }
    // #endregion Constructors (1)
    // #region Public Accessors (3)
    get controls() {
        return __classPrivateFieldGet(this, _PerspectiveCamera_controls, "f");
    }
    get fov() {
        return __classPrivateFieldGet(this, _PerspectiveCamera_camera, "f").fov;
    }
    set fov(value) {
        try {
            __classPrivateFieldGet(this, _PerspectiveCamera_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).fov: Updating Fov to ${value}.`);
            __classPrivateFieldGet(this, _PerspectiveCamera_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).fov`, value, 'positive');
            __classPrivateFieldGet(this, _PerspectiveCamera_camera, "f").fov = value;
            __classPrivateFieldGet(this, _PerspectiveCamera_viewer, "f").update();
            __classPrivateFieldGet(this, _PerspectiveCamera_logger, "f").debug(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).fov: fov was set to: ${value}`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.ShapeDiverViewerError || e instanceof viewer_shared_services_1.ShapeDiverBackendError)
                throw e;
            throw __classPrivateFieldGet(this, _PerspectiveCamera_logger, "f").handleError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).fov`, e);
        }
    }
}
exports.PerspectiveCamera = PerspectiveCamera;
_PerspectiveCamera_camera = new WeakMap(), _PerspectiveCamera_controls = new WeakMap(), _PerspectiveCamera_inputValidator = new WeakMap(), _PerspectiveCamera_logger = new WeakMap(), _PerspectiveCamera_viewer = new WeakMap();
//# sourceMappingURL=PerspectiveCamera.js.map