import * as THREE from 'three';
import { Box } from '@shapediver/viewer.shared.math';
import { RenderingEngine } from '..';
import { IManager } from '../interfaces/IManager';
export declare class EnvironmentGeometryManager implements IManager {
    private readonly _renderingEngine;
    private readonly _converter;
    private readonly _eventEngine;
    private _environmentGeometryObject;
    private _grid;
    private _gridObject;
    private _groundPlane;
    private _groundPlaneObject;
    private _groundPlaneColor;
    private _gridColor;
    private _initialized;
    constructor(_renderingEngine: RenderingEngine);
    get gridColor(): string;
    set gridColor(value: string);
    get groundPlaneColor(): string;
    set groundPlaneColor(value: string);
    get grid(): THREE.GridHelper;
    get groundPlane(): THREE.Mesh;
    assignGroundPlaneColor(color: string): void;
    assignGroundPlaneEnvironmentIntensity(intensity: number): void;
    changeSceneExtents(bb: Box): void;
    init(): void;
}
//# sourceMappingURL=EnvironmentGeometryManager.d.ts.map