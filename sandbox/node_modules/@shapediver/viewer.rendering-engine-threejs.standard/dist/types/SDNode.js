"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SDNode_SDid, _SDNode_SDversion;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDNode = void 0;
const three_1 = require("three");
class SDNode extends three_1.Object3D {
    constructor(SDid, SDversion) {
        super();
        // #region Constructors (1)
        _SDNode_SDid.set(this, void 0);
        _SDNode_SDversion.set(this, void 0);
        __classPrivateFieldSet(this, _SDNode_SDid, SDid, "f");
        __classPrivateFieldSet(this, _SDNode_SDversion, SDversion, "f");
    }
    applyTransformation(transformation) {
        this.matrix.identity();
        this.matrixWorld.identity();
        this.position.set(0, 0, 0);
        this.scale.set(1, 1, 1);
        this.quaternion.set(0, 0, 0, 1);
        this.applyMatrix4(new three_1.Matrix4().fromArray(transformation));
    }
    // #endregion Constructors (1)
    // #region Public Accessors (4)
    get SDid() {
        return __classPrivateFieldGet(this, _SDNode_SDid, "f");
    }
    set SDid(value) {
        __classPrivateFieldSet(this, _SDNode_SDid, value, "f");
    }
    get SDversion() {
        return __classPrivateFieldGet(this, _SDNode_SDversion, "f");
    }
    set SDversion(value) {
        __classPrivateFieldSet(this, _SDNode_SDversion, value, "f");
    }
}
exports.SDNode = SDNode;
_SDNode_SDid = new WeakMap(), _SDNode_SDversion = new WeakMap();
//# sourceMappingURL=SDNode.js.map