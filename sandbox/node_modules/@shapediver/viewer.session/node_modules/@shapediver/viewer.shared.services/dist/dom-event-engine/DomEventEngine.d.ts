import { IDomEventListener } from "./IDomEventListener";
export declare class DomEventEngine {
    private readonly _domEventListeners;
    private readonly _uuidGenerator;
    private _allowListeners;
    private _canvas;
    private _currentPointerPosition;
    private _onContextMenu;
    private _onKeyDown;
    private _onKeyDownPointerPositionHelper;
    private _onKeyUp;
    private _onMouseWheel;
    private _onPointerDown;
    private _onPointerMove;
    private _onPointerOut;
    private _onPointerUp;
    private _restrictedListenerTokens;
    constructor(canvas: HTMLCanvasElement);
    addDomEventListener(listener: IDomEventListener): string;
    addRestrictedListenerToken(token: string): void;
    /**
     * Allow / disallow events.
     * This can be used to disable events for a specific viewer.
     *
     * Example use case: If you don't want to allow mouse wheel events for a specific viewer so that users can scroll past the viewer.
     *
     * Be aware that this might cause some issues with the the camera controls if the pointer events are disabled only partially.
     *
     * @param allowedListeners
     */
    allowEventListeners(allowedListeners: {
        mousewheel?: boolean;
        pointerdown?: boolean;
        pointermove?: boolean;
        pointerup?: boolean;
        pointerout?: boolean;
        keydown?: boolean;
        keyup?: boolean;
        contextmenu?: boolean;
    }): void;
    dispose(): void;
    removeAllDomEventListener(): void;
    removeDomEventListener(id: string): boolean;
    removeRestrictedListenerToken(token: string): void;
    private addEventListeners;
    private onContextMenu;
    private onKeyDown;
    private onKeyDownPointerPositionHelper;
    private onKeyUp;
    private onMouseWheel;
    private onPointerDown;
    private onPointerMove;
    private onPointerOut;
    private onPointerUp;
    private removeEventListeners;
}
//# sourceMappingURL=DomEventEngine.d.ts.map