import { vec3 } from "gl-matrix";
import { Color } from "../../../types";
import { IMapData, IMapDataPropertiesDefinition } from "./IMapData";
import { IMaterialAbstractData, IMaterialAbstractDataPropertiesGeneric } from "./IMaterialAbstractData";
export declare type IMaterialGemDataProperties = Partial<IMaterialGemDataPropertiesGeneric<IMapData>>;
export declare type IMaterialGemDataPropertiesDefinition = Partial<IMaterialGemDataPropertiesGeneric<IMapDataPropertiesDefinition>>;
export interface IMaterialGemData extends IMaterialAbstractData, IMaterialGemDataPropertiesGeneric<IMapData> {
    clone(): IMaterialGemData;
    copy(source: IMaterialGemData): void;
}
interface IMaterialGemDataPropertiesGeneric<T> extends IMaterialAbstractDataPropertiesGeneric<T> {
    brightness?: number;
    center?: vec3;
    colorTransferBegin?: Color;
    colorTransferEnd?: Color;
    contrast?: number;
    dispersion?: number;
    envMap?: string | string[];
    gamma?: number;
    impurityMap?: T;
    impurityScale?: number;
    radius?: number;
    refractionIndex?: number;
    sphericalNormalMap?: T;
    tracingDepth?: number;
    tracingOpacity?: number;
}
export {};
//# sourceMappingURL=IMaterialGemDataProperties.d.ts.map