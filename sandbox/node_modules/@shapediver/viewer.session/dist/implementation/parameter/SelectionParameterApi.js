"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SelectionParameterApi_parameter;
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSelectionParameterApi = exports.SelectionParameterApi = void 0;
const ParameterApi_1 = require("./ParameterApi");
class SelectionParameterApi extends ParameterApi_1.ParameterApi {
    // #endregion Properties (1)
    // #region Constructors (1)
    constructor(parameter) {
        super(parameter);
        // #region Properties (1)
        _SelectionParameterApi_parameter.set(this, void 0);
        __classPrivateFieldSet(this, _SelectionParameterApi_parameter, parameter, "f");
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (5)
    get hover() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").hover;
    }
    get interactionType() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").interactionType;
    }
    get maximumSelection() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").maximumSelection;
    }
    get minimumSelection() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").minimumSelection;
    }
    get nameFilter() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").nameFilter;
    }
    get selectionColor() {
        return __classPrivateFieldGet(this, _SelectionParameterApi_parameter, "f").selectionColor;
    }
}
exports.SelectionParameterApi = SelectionParameterApi;
_SelectionParameterApi_parameter = new WeakMap();
const isSelectionParameterApi = (obj) => obj instanceof SelectionParameterApi;
exports.isSelectionParameterApi = isSelectionParameterApi;
//# sourceMappingURL=SelectionParameterApi.js.map