"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _DrawingParameterApi_parameter;
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDrawingParameterApi = exports.DrawingParameterApi = void 0;
const ParameterApi_1 = require("./ParameterApi");
class DrawingParameterApi extends ParameterApi_1.ParameterApi {
    // #endregion Properties (1)
    // #region Constructors (1)
    constructor(parameter) {
        super(parameter);
        // #region Properties (1)
        _DrawingParameterApi_parameter.set(this, void 0);
        __classPrivateFieldSet(this, _DrawingParameterApi_parameter, parameter, "f");
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (2)
    get geometry() {
        return __classPrivateFieldGet(this, _DrawingParameterApi_parameter, "f").geometry;
    }
    get restrictions() {
        return __classPrivateFieldGet(this, _DrawingParameterApi_parameter, "f").restrictions;
    }
}
exports.DrawingParameterApi = DrawingParameterApi;
_DrawingParameterApi_parameter = new WeakMap();
const isDrawingParameterApi = (obj) => obj instanceof DrawingParameterApi;
exports.isDrawingParameterApi = isDrawingParameterApi;
//# sourceMappingURL=DrawingParameterApi.js.map