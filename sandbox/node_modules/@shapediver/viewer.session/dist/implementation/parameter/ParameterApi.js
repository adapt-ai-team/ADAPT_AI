"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ParameterApi_inputValidator, _ParameterApi_logger, _ParameterApi_parameter;
Object.defineProperty(exports, "__esModule", { value: true });
exports.isParameterApi = exports.ParameterApi = void 0;
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
class ParameterApi {
    // #endregion Properties (3)
    // #region Constructors (1)
    constructor(parameter) {
        // #region Properties (3)
        _ParameterApi_inputValidator.set(this, viewer_shared_services_1.InputValidator.instance);
        _ParameterApi_logger.set(this, viewer_shared_services_1.Logger.instance);
        _ParameterApi_parameter.set(this, void 0);
        __classPrivateFieldSet(this, _ParameterApi_parameter, parameter, "f");
    }
    // #endregion Constructors (1)
    // #region Public Getters And Setters (25)
    get choices() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").choices;
    }
    get decimalplaces() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").decimalplaces;
    }
    get defval() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").defval;
    }
    get displayname() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").displayname;
    }
    set displayname(value) {
        const scope = "displayname";
        __classPrivateFieldGet(this, _ParameterApi_inputValidator, "f").validateAndError(`ParameterApi.${scope}`, value, "string", false);
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").displayname = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").displayname}.`);
    }
    get expression() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").expression;
    }
    get format() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").format;
    }
    get group() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").group;
    }
    get hidden() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").hidden;
    }
    set hidden(value) {
        const scope = "hidden";
        __classPrivateFieldGet(this, _ParameterApi_inputValidator, "f").validateAndError(`ParameterApi.${scope}`, value, "boolean");
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").hidden = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").hidden}.`);
    }
    get id() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").id;
    }
    get max() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").max;
    }
    get min() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").min;
    }
    get name() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").name;
    }
    get order() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").order;
    }
    set order(value) {
        const scope = "order";
        __classPrivateFieldGet(this, _ParameterApi_inputValidator, "f").validateAndError(`ParameterApi.${scope}`, value, "number", false);
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").order = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").order}.`);
    }
    get sessionValue() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").sessionValue;
    }
    set sessionValue(value) {
        const scope = "sessionValue";
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").sessionValue = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").value}.`);
    }
    get settings() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").settings;
    }
    get structure() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").structure;
    }
    get tooltip() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").tooltip;
    }
    set tooltip(value) {
        const scope = "tooltip";
        __classPrivateFieldGet(this, _ParameterApi_inputValidator, "f").validateAndError(`ParameterApi.${scope}`, value, "string", false);
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").tooltip = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").tooltip}.`);
    }
    get type() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").type;
    }
    get value() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").value;
    }
    set value(value) {
        const scope = "value";
        this.isValid(value, true);
        __classPrivateFieldGet(this, _ParameterApi_parameter, "f").value = value;
        __classPrivateFieldGet(this, _ParameterApi_logger, "f").debug(`ParameterApi.${scope}: ${scope} was set to ${__classPrivateFieldGet(this, _ParameterApi_parameter, "f").value}.`);
    }
    get visualization() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").visualization;
    }
    // #endregion Public Getters And Setters (25)
    // #region Public Methods (4)
    isValid(value, throwError) {
        const scope = "isValid";
        __classPrivateFieldGet(this, _ParameterApi_inputValidator, "f").validateAndError(`ParameterApi.${scope}`, throwError, "boolean", false);
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").isValid(value, throwError);
    }
    resetToDefaultValue() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").resetToDefaultValue();
    }
    resetToSessionValue() {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").resetToSessionValue();
    }
    stringify(value) {
        return __classPrivateFieldGet(this, _ParameterApi_parameter, "f").stringify(value);
    }
}
exports.ParameterApi = ParameterApi;
_ParameterApi_inputValidator = new WeakMap(), _ParameterApi_logger = new WeakMap(), _ParameterApi_parameter = new WeakMap();
const isParameterApi = (obj) => obj instanceof ParameterApi;
exports.isParameterApi = isParameterApi;
//# sourceMappingURL=ParameterApi.js.map