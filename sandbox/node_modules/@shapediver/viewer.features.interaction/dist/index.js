"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LineRestrictionApi = exports.PointRestrictionApi = exports.CameraPlaneRestrictionApi = exports.GeometryRestrictionApi = exports.GridRestrictionApi = exports.AxisRestrictionApi = exports.AngularRestrictionApi = exports.PlaneRestrictionApi = exports.RESTRICTION_TYPE = exports.checkNodeNameMatch = exports.calculateCombinedDraggedNodes = exports.getNodesByName = exports.addInteractionData = exports.matchNodesWithPatterns = exports.getInstanceNodeData = exports.getNodeData = exports.convertUserDefinedNameFiltersForInstances = exports.convertUserDefinedNameFilters = exports.gatherNodesForPattern = exports.PointConstraint = exports.PlaneConstraint = exports.LineConstraint = exports.CameraPlaneConstraint = exports.INTERACTION_STATE = exports.DragManager = exports.HoverManager = exports.SelectOnUpManager = exports.MultiSelectManager = exports.SelectManager = exports.InteractionData = exports.AbstractInteractionManager = exports.InteractionEngine = void 0;
const viewer_rendering_engine_intersection_restriction_engine_1 = require("@shapediver/viewer.rendering-engine.intersection-restriction-engine");
Object.defineProperty(exports, "AngularRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.AngularRestrictionApi; } });
Object.defineProperty(exports, "AxisRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.AxisRestrictionApi; } });
Object.defineProperty(exports, "CameraPlaneRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.CameraPlaneRestrictionApi; } });
Object.defineProperty(exports, "GeometryRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.GeometryRestrictionApi; } });
Object.defineProperty(exports, "GridRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.GridRestrictionApi; } });
Object.defineProperty(exports, "LineRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.LineRestrictionApi; } });
Object.defineProperty(exports, "PlaneRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.PlaneRestrictionApi; } });
Object.defineProperty(exports, "PointRestrictionApi", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.PointRestrictionApi; } });
Object.defineProperty(exports, "RESTRICTION_TYPE", { enumerable: true, get: function () { return viewer_rendering_engine_intersection_restriction_engine_1.RESTRICTION_TYPE; } });
const AbstractInteractionManager_1 = require("./implementation/AbstractInteractionManager");
Object.defineProperty(exports, "AbstractInteractionManager", { enumerable: true, get: function () { return AbstractInteractionManager_1.AbstractInteractionManager; } });
const CameraPlaneConstraint_1 = require("./implementation/dragConstraints/CameraPlaneConstraint");
Object.defineProperty(exports, "CameraPlaneConstraint", { enumerable: true, get: function () { return CameraPlaneConstraint_1.CameraPlaneConstraint; } });
const LineConstraint_1 = require("./implementation/dragConstraints/LineConstraint");
Object.defineProperty(exports, "LineConstraint", { enumerable: true, get: function () { return LineConstraint_1.LineConstraint; } });
const PlaneConstraint_1 = require("./implementation/dragConstraints/PlaneConstraint");
Object.defineProperty(exports, "PlaneConstraint", { enumerable: true, get: function () { return PlaneConstraint_1.PlaneConstraint; } });
const PointConstraint_1 = require("./implementation/dragConstraints/PointConstraint");
Object.defineProperty(exports, "PointConstraint", { enumerable: true, get: function () { return PointConstraint_1.PointConstraint; } });
const InteractionData_1 = require("./implementation/InteractionData");
Object.defineProperty(exports, "InteractionData", { enumerable: true, get: function () { return InteractionData_1.InteractionData; } });
const InteractionEngine_1 = require("./implementation/InteractionEngine");
Object.defineProperty(exports, "InteractionEngine", { enumerable: true, get: function () { return InteractionEngine_1.InteractionEngine; } });
const DragManager_1 = require("./implementation/managers/DragManager");
Object.defineProperty(exports, "DragManager", { enumerable: true, get: function () { return DragManager_1.DragManager; } });
const HoverManager_1 = require("./implementation/managers/HoverManager");
Object.defineProperty(exports, "HoverManager", { enumerable: true, get: function () { return HoverManager_1.HoverManager; } });
const MultiSelectManager_1 = require("./implementation/managers/MultiSelectManager");
Object.defineProperty(exports, "MultiSelectManager", { enumerable: true, get: function () { return MultiSelectManager_1.MultiSelectManager; } });
const SelectManager_1 = require("./implementation/managers/SelectManager");
Object.defineProperty(exports, "SelectManager", { enumerable: true, get: function () { return SelectManager_1.SelectManager; } });
const SelectOnUpManager_1 = require("./implementation/managers/SelectOnUpManager");
Object.defineProperty(exports, "SelectOnUpManager", { enumerable: true, get: function () { return SelectOnUpManager_1.SelectOnUpManager; } });
const PatternUtils_1 = require("./implementation/utils/PatternUtils");
Object.defineProperty(exports, "addInteractionData", { enumerable: true, get: function () { return PatternUtils_1.addInteractionData; } });
Object.defineProperty(exports, "calculateCombinedDraggedNodes", { enumerable: true, get: function () { return PatternUtils_1.calculateCombinedDraggedNodes; } });
Object.defineProperty(exports, "checkNodeNameMatch", { enumerable: true, get: function () { return PatternUtils_1.checkNodeNameMatch; } });
Object.defineProperty(exports, "convertUserDefinedNameFilters", { enumerable: true, get: function () { return PatternUtils_1.convertUserDefinedNameFilters; } });
Object.defineProperty(exports, "convertUserDefinedNameFiltersForInstances", { enumerable: true, get: function () { return PatternUtils_1.convertUserDefinedNameFiltersForInstances; } });
Object.defineProperty(exports, "gatherNodesForPattern", { enumerable: true, get: function () { return PatternUtils_1.gatherNodesForPattern; } });
Object.defineProperty(exports, "getInstanceNodeData", { enumerable: true, get: function () { return PatternUtils_1.getInstanceNodeData; } });
Object.defineProperty(exports, "getNodeData", { enumerable: true, get: function () { return PatternUtils_1.getNodeData; } });
Object.defineProperty(exports, "getNodesByName", { enumerable: true, get: function () { return PatternUtils_1.getNodesByName; } });
Object.defineProperty(exports, "matchNodesWithPatterns", { enumerable: true, get: function () { return PatternUtils_1.matchNodesWithPatterns; } });
const IInteractionEngine_1 = require("./interfaces/IInteractionEngine");
Object.defineProperty(exports, "INTERACTION_STATE", { enumerable: true, get: function () { return IInteractionEngine_1.INTERACTION_STATE; } });
//# sourceMappingURL=index.js.map