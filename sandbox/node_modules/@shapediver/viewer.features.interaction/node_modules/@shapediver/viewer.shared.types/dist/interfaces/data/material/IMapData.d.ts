import { ITreeNodeData } from "@shapediver/viewer.shared.node-tree";
import { vec2 } from "gl-matrix";
import { Color } from "../../../types";
export declare type IMapDataProperties = IMapDataPropertiesGeneric<HTMLImageElement | ArrayBuffer>;
export declare type IMapDataPropertiesDefinition = Partial<IMapDataPropertiesGeneric<HTMLImageElement | ArrayBuffer | string>> | string;
export interface IMapData extends ITreeNodeData, IMapDataProperties {
    clone(): IMapData;
}
interface IMapDataPropertiesGeneric<T> {
    asData?: boolean;
    blob?: Blob;
    center: vec2;
    color?: Color;
    data?: number[];
    flipY: boolean;
    image: T;
    magFilter: TEXTURE_FILTERING;
    minFilter: TEXTURE_FILTERING;
    offset: vec2;
    repeat: vec2;
    rotation: number;
    texCoord?: number;
    wrapS: TEXTURE_WRAPPING;
    wrapT: TEXTURE_WRAPPING;
}
export declare enum TEXTURE_FILTERING {
    NONE = 0,
    NEAREST = 9728,
    LINEAR = 9729,
    NEAREST_MIPMAP_NEAREST = 9984,
    LINEAR_MIPMAP_NEAREST = 9985,
    NEAREST_MIPMAP_LINEAR = 9986,
    LINEAR_MIPMAP_LINEAR = 9987
}
export declare enum TEXTURE_WRAPPING {
    REPEAT = 10497,
    CLAMP_TO_EDGE = 33071,
    MIRRORED_REPEAT = 33648
}
export {};
//# sourceMappingURL=IMapData.d.ts.map