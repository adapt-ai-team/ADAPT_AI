import { ShapeDiverResponseParameter, ShapeDiverResponseParameterGroup, ShapeDiverResponseParameterStructure } from "@shapediver/sdk.geometry-api-sdk-v2";
import { PARAMETER_TYPE, PARAMETER_VISUALIZATION } from "@shapediver/viewer.shared.types";
import { IParameter } from "../../interfaces/dto/IParameter";
import { SessionEngine } from "../SessionEngine";
export declare class Parameter<T> implements IParameter<T> {
    #private;
    constructor(paramDef: ShapeDiverResponseParameter, sessionEngine: SessionEngine);
    get choices(): string[] | undefined;
    get decimalplaces(): number | undefined;
    get defval(): string;
    get displayname(): string | undefined;
    set displayname(value: string | undefined);
    get expression(): string | undefined;
    get format(): string[] | undefined;
    get group(): ShapeDiverResponseParameterGroup | undefined;
    get hidden(): boolean;
    set hidden(value: boolean);
    get id(): string;
    get lastValidatedValue(): T | string;
    get max(): number | undefined;
    get min(): number | undefined;
    get name(): string;
    get order(): number | undefined;
    set order(value: number | undefined);
    get sessionValue(): T | string;
    set sessionValue(value: T | string);
    get settings(): Record<string, unknown> | undefined;
    get structure(): ShapeDiverResponseParameterStructure | undefined;
    get tooltip(): string | undefined;
    set tooltip(value: string | undefined);
    get type(): PARAMETER_TYPE;
    get value(): T | string;
    set value(value: T | string);
    get visualization(): PARAMETER_VISUALIZATION | undefined;
    isValid(value: unknown, throwError?: boolean): boolean;
    resetToDefaultValue(): void;
    resetToSessionValue(): void;
    stringify(val?: unknown): string;
}
//# sourceMappingURL=Parameter.d.ts.map