import { DomEventEngine } from '@shapediver/viewer.shared.services';
import { Box } from '@shapediver/viewer.shared.math';
import { CAMERATYPE, ICameraEngine } from '../interfaces/ICameraEngine';
import { AbstractCamera as Camera } from './camera/AbstractCamera';
export declare class CameraEngine implements ICameraEngine {
    private readonly _viewerId;
    private readonly _canvas;
    private readonly _domEventEngine;
    private readonly _cameras;
    private readonly _camerasDomEventListenerToken;
    private readonly _eventEngine;
    private readonly _logger;
    private readonly _settingsEngine;
    private readonly _stateEngine;
    private readonly _tree;
    private readonly _uuidGenerator;
    private _camera;
    private _settingsApplied;
    protected _boundingBox: Box;
    constructor(_viewerId: string, _canvas: HTMLCanvasElement, _domEventEngine: DomEventEngine);
    get camera(): Camera | null;
    get cameras(): {
        [key: string]: Camera;
    };
    activateCameraEvents(): void;
    applySettings(): void;
    assignCamera(id: string): void;
    createCamera(type: CAMERATYPE, id?: string): Camera;
    deactivateCameraEvents(): void;
    removeCamera(id: string): boolean;
    saveSettings(): void;
    private searchForNewCameras;
}
//# sourceMappingURL=CameraEngine.d.ts.map