import { vec2, vec3 } from 'gl-matrix';
import { Box } from '@shapediver/viewer.shared.math';
import { AbstractCamera } from './AbstractCamera';
export declare class PerspectiveCamera extends AbstractCamera {
    private readonly _converter;
    private readonly _logger;
    private readonly _tree;
    private _domEventListenerToken?;
    private _domEventEngine?;
    private _aspect;
    private _fov;
    constructor(id: string);
    get aspect(): number | undefined;
    set aspect(value: number | undefined);
    get fov(): number;
    set fov(value: number);
    applySettings(): void;
    assignViewer(viewerId: string): void;
    clone(): PerspectiveCamera;
    calculateZoomTo(zoomTarget?: Box, startingPosition?: vec3, startingTarget?: vec3): {
        position: vec3;
        target: vec3;
    };
    project(pos: vec3, position?: vec3, target?: vec3): vec2;
    unproject(pos: vec3, position?: vec3, target?: vec3): vec3;
}
//# sourceMappingURL=PerspectiveCamera.d.ts.map