import { ITreeNode } from "@shapediver/viewer.shared.node-tree";
import { Color } from "@shapediver/viewer.shared.types";
import { vec3 } from "gl-matrix";
import { ILight } from "./ILight";
export interface ILightScene {
    id: string;
    lights: {
        [key: string]: ILight;
    };
    name?: string;
    node: ITreeNode;
    update?: () => void;
    addAmbientLight(properties: {
        color?: Color;
        intensity?: number;
        id?: string;
        name?: string;
    }): ILight;
    addDirectionalLight(properties: {
        color?: Color;
        intensity?: number;
        direction?: vec3;
        castShadow?: boolean;
        shadowMapResolution?: number;
        shadowMapBias?: number;
        id?: string;
        name?: string;
    }): ILight;
    addHemisphereLight(properties: {
        color?: Color;
        intensity?: number;
        groundColor?: Color;
        id?: string;
        name?: string;
    }): ILight;
    addPointLight(properties: {
        color?: Color;
        intensity?: number;
        position?: vec3;
        distance?: number;
        decay?: number;
        id?: string;
        name?: string;
    }): ILight;
    addSpotLight(properties: {
        color?: Color;
        intensity?: number;
        position?: vec3;
        target?: vec3;
        distance?: number;
        decay?: number;
        angle?: number;
        penumbra?: number;
        id?: string;
        name?: string;
    }): ILight;
    removeLight(id: string): boolean;
}
//# sourceMappingURL=ILightScene.d.ts.map