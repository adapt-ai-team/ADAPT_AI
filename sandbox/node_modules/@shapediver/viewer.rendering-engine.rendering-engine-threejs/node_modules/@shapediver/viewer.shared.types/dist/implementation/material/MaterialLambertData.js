"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _MaterialLambertData_displacementBias, _MaterialLambertData_displacementMap, _MaterialLambertData_displacementScale, _MaterialLambertData_specularMap, _MaterialLambertData_envMap, _MaterialLambertData_reflectivity;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaterialLambertData = void 0;
const IMaterialAbstractData_1 = require("../../interfaces/data/material/IMaterialAbstractData");
const AbstractMaterialData_1 = require("./AbstractMaterialData");
class MaterialLambertData extends AbstractMaterialData_1.AbstractMaterialData {
    constructor(properties, id, version) {
        super(properties, id, version);
        _MaterialLambertData_displacementBias.set(this, 0);
        _MaterialLambertData_displacementMap.set(this, void 0);
        _MaterialLambertData_displacementScale.set(this, 1);
        _MaterialLambertData_specularMap.set(this, void 0);
        _MaterialLambertData_envMap.set(this, void 0);
        _MaterialLambertData_reflectivity.set(this, 1);
        if (!properties)
            return;
        if (properties.displacementBias !== undefined)
            this.displacementBias = properties.displacementBias;
        if (properties.displacementMap !== undefined)
            this.displacementMap = properties.displacementMap;
        if (properties.displacementScale !== undefined)
            this.displacementScale = properties.displacementScale;
        if (properties.specularMap !== undefined)
            this.specularMap = properties.specularMap;
        if (properties.envMap !== undefined)
            this.envMap = properties.envMap;
        if (properties.reflectivity !== undefined)
            this.reflectivity = properties.reflectivity;
    }
    get displacementBias() {
        return __classPrivateFieldGet(this, _MaterialLambertData_displacementBias, "f");
    }
    set displacementBias(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_displacementBias, value, "f");
    }
    get displacementMap() {
        return __classPrivateFieldGet(this, _MaterialLambertData_displacementMap, "f");
    }
    set displacementMap(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_displacementMap, value, "f");
    }
    get displacementScale() {
        return __classPrivateFieldGet(this, _MaterialLambertData_displacementScale, "f");
    }
    set displacementScale(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_displacementScale, value, "f");
    }
    get specularMap() {
        return __classPrivateFieldGet(this, _MaterialLambertData_specularMap, "f");
    }
    set specularMap(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_specularMap, value, "f");
    }
    get envMap() {
        return __classPrivateFieldGet(this, _MaterialLambertData_envMap, "f");
    }
    set envMap(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_envMap, value, "f");
    }
    get reflectivity() {
        return __classPrivateFieldGet(this, _MaterialLambertData_reflectivity, "f");
    }
    set reflectivity(value) {
        __classPrivateFieldSet(this, _MaterialLambertData_reflectivity, value, "f");
    }
    clone() {
        return new MaterialLambertData({
            alphaMap: this.alphaMap,
            alphaCutoff: this.alphaCutoff,
            alphaMode: this.alphaMode,
            aoMap: this.aoMap,
            aoMapIntensity: this.aoMapIntensity,
            bumpMap: this.bumpMap,
            bumpScale: this.bumpScale,
            color: this.color,
            depthTest: this.depthTest,
            depthWrite: this.depthWrite,
            emissiveMap: this.emissiveMap,
            emissiveness: this.emissiveness,
            shading: this.shading,
            map: this.map,
            name: this.name,
            normalMap: this.normalMap,
            normalScale: this.normalScale,
            opacity: this.opacity,
            side: this.side,
            transparent: this.transparent,
            displacementMap: this.displacementMap,
            displacementScale: this.displacementScale,
            displacementBias: this.displacementBias,
            envMap: this.envMap,
            reflectivity: this.reflectivity,
            specularMap: this.specularMap,
        }, this.id, this.version);
    }
    copy(source) {
        this.displacementBias = source.displacementBias;
        this.displacementMap = source.displacementMap;
        this.displacementScale = source.displacementScale;
        this.specularMap = source.specularMap;
        this.envMap = source.envMap;
        this.reflectivity = source.reflectivity;
    }
    reset() {
        this.alphaCutoff = 0;
        this.alphaMap = undefined;
        this.alphaMode = IMaterialAbstractData_1.MATERIAL_ALPHA.OPAQUE;
        this.aoMap = undefined;
        this.aoMapIntensity = 1.0;
        this.bumpMap = undefined;
        this.bumpScale = 1.0;
        this.color = "#ffffff";
        this.depthTest = undefined;
        this.depthWrite = undefined;
        this.emissiveMap = undefined;
        this.emissiveness = "#000000";
        this.materialOutput = false;
        this.map = undefined;
        this.normalMap = undefined;
        this.normalScale = 1.0;
        this.opacity = 1.0;
        this.shading = IMaterialAbstractData_1.MATERIAL_SHADING.SMOOTH;
        this.side = IMaterialAbstractData_1.MATERIAL_SIDE.DOUBLE;
        this.transparent = undefined;
        this.displacementBias = 0;
        this.displacementMap = undefined;
        this.displacementScale = 1;
        this.specularMap = undefined;
        this.envMap = undefined;
        this.reflectivity = 1;
    }
}
exports.MaterialLambertData = MaterialLambertData;
_MaterialLambertData_displacementBias = new WeakMap(), _MaterialLambertData_displacementMap = new WeakMap(), _MaterialLambertData_displacementScale = new WeakMap(), _MaterialLambertData_specularMap = new WeakMap(), _MaterialLambertData_envMap = new WeakMap(), _MaterialLambertData_reflectivity = new WeakMap();
//# sourceMappingURL=MaterialLambertData.js.map