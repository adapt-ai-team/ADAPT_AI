import { Color } from "@shapediver/viewer.shared.types";
import { vec3 } from "gl-matrix";
import { RenderingEngine } from "../..";
import { SDObject } from "../../objects/SDObject";
import { IEnvironmentGeometry } from "./IEnvironmentGeometry";
export declare class GroundPlaneShadow implements IEnvironmentGeometry {
    private readonly _renderingEngine;
    private readonly _parent;
    private readonly _converter;
    private _color;
    private _groundPlaneShadow;
    private _groundPlaneShadowObject;
    constructor(_renderingEngine: RenderingEngine, _parent: SDObject);
    get color(): Color;
    set color(value: Color);
    get visible(): boolean;
    set visible(value: boolean);
    changeSceneExtents(position: vec3, divisions: number, gridExtents: number): void;
    updatePosition(position: vec3): void;
    private assignGroundPlaneShadowColor;
}
//# sourceMappingURL=GroundPlaneShadow.d.ts.map