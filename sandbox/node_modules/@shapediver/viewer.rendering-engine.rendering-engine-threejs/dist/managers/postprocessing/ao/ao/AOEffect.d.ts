import { Effect, EffectComposer } from "postprocessing";
import { Camera, Color, Scene, WebGLRenderer } from "three";
import { NormalPass } from "../../utils/NormalPass";
import { PoissionDenoisePass } from "../poissionDenoise/PoissionDenoisePass";
import { AOPass } from "./AOPass";
declare class AOEffect extends Effect {
    static DefaultOptions: {
        iterations: number;
        radius: number;
        rings: number;
        lumaPhi: number;
        depthPhi: number;
        normalPhi: number;
        samples: number;
        distance: number;
        normalTexture: null;
        resolutionScale: number;
        spp: number;
        distancePower: number;
        power: number;
        bias: number;
        thickness: number;
        color: Color;
        useNormalPass: boolean;
        velocityDepthNormalPass: null;
    };
    aoPass: AOPass;
    composer: EffectComposer;
    lastSize: {
        width: number;
        height: number;
        resolutionScale: number;
    };
    normalPass?: NormalPass;
    poissionDenoisePass: PoissionDenoisePass;
    resolutionScale: number;
    constructor(composer: EffectComposer, camera: Camera, scene: Scene, aoPass: AOPass, options?: {
        [key: string]: unknown;
    });
    makeOptionsReactive(options: {
        [key: string]: unknown;
    }): void;
    setSize(width: number, height: number): void;
    update(renderer: WebGLRenderer): void;
}
export { AOEffect };
//# sourceMappingURL=AOEffect.d.ts.map