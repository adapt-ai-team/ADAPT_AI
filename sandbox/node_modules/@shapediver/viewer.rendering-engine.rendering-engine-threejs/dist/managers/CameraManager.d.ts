import { AbstractCamera } from "@shapediver/viewer.rendering-engine.camera-engine";
import { IManager } from "@shapediver/viewer.rendering-engine.rendering-engine";
import { mat4 } from "gl-matrix";
import * as THREE from "three";
import { SDData } from "../objects/SDData";
import { RenderingEngine } from "../RenderingEngine";
export declare class CameraManager implements IManager {
    #private;
    private readonly _renderingEngine;
    constructor(_renderingEngine: RenderingEngine);
    get camera(): THREE.Camera;
    adjustCamera(aspect: number): {
        camera: THREE.Camera;
        matrix?: mat4;
    };
    init(): void;
    load(camera: AbstractCamera, dataChild?: SDData): void;
    updateCamera(time: number, aspect: number): boolean;
}
//# sourceMappingURL=CameraManager.d.ts.map