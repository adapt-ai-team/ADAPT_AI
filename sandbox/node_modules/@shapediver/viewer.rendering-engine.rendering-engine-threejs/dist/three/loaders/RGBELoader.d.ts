import { DataTextureLoader, LoadingManager, PixelFormat, TextureDataType } from "three";
export interface RGBE {
    width: number;
    height: number;
    data: Float32Array | Uint8Array;
    header: string;
    gamma: number;
    exposure: number;
    format: PixelFormat;
    type: TextureDataType;
}
declare class RGBELoader extends DataTextureLoader {
    type: number;
    constructor(manager?: LoadingManager);
    parse(buffer: ArrayBuffer): RGBE;
    setDataType(value: number): this;
    load(url: string, onLoad: {
        (texture: any, texData: any): void;
        (texture: any): void;
        (arg0: any, arg1: any): void;
    }, onProgress: ((event: ProgressEvent<EventTarget>) => void) | undefined, onError: ((event: unknown) => void) | undefined): import("three").DataTexture;
}
export { RGBELoader };
//# sourceMappingURL=RGBELoader.d.ts.map