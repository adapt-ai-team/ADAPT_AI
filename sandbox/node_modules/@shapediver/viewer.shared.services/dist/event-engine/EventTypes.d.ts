export declare enum CAMERA {
    CAMERA_START = "camera.start",
    CAMERA_MOVE = "camera.move",
    CAMERA_END = "camera.end"
}
export declare enum RENDERING {
    BEAUTY_RENDERING_FINISHED = "rendering.beautyRenderingFinished"
}
export declare enum SCENE {
    SCENE_BOUNDING_BOX_CHANGE = "scene.boundingBoxChange"
}
export declare enum VIEWER {
    BUSY_MODE_ON = "viewer.busy.on",
    BUSY_MODE_OFF = "viewer.busy.off",
    VIEWER_CREATED = "viewer.created",
    VIEWER_UPDATED = "viewer.updated",
    VIEWER_CLOSED = "viewer.closed"
}
export declare enum SESSION {
    SESSION_CREATED = "session.created",
    SESSION_CUSTOMIZED = "session.customized",
    SESSION_CLOSED = "session.closed",
    SESSION_INITIAL_OUTPUTS_LOADED = "session.initialOutputsLoaded"
}
export declare enum SETTINGS {
    SETTINGS_UPDATE = "settings.update"
}
export declare enum TASK {
    TASK_START = "task.start",
    TASK_PROCESS = "task.process",
    TASK_END = "task.end",
    TASK_CANCEL = "task.cancel"
}
export declare enum INTERACTION {
    DRAG_START = "interaction.drag.start",
    DRAG_MOVE = "interaction.drag.move",
    DRAG_END = "interaction.drag.end",
    HOVER_ON = "interaction.hover.on",
    HOVER_OFF = "interaction.hover.off",
    SELECT_ON = "interaction.select.on",
    SELECT_OFF = "interaction.select.off"
}
export declare const EVENTTYPE: {
    CAMERA: typeof CAMERA;
    RENDERING: typeof RENDERING;
    SCENE: typeof SCENE;
    SESSION: typeof SESSION;
    SETTINGS: typeof SETTINGS;
    VIEWER: typeof VIEWER;
    INTERACTION: typeof INTERACTION;
    TASK: typeof TASK;
};
export declare type MAINEVENTTYPE = typeof CAMERA | typeof RENDERING | typeof SCENE | typeof SESSION | typeof SETTINGS | typeof VIEWER | typeof INTERACTION | typeof TASK;
//# sourceMappingURL=EventTypes.d.ts.map